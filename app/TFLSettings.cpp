// ==============================
// File:			TFLSettings
// Project:			Einstein
//
// Copyright 2003-2007 by Paul Guyot (pguyot@kallisys.net).
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
// ==============================
// $Id$
// ==============================

// generated by Fast Light User Interface Designer (fluid) version 1.0400

#include "TFLSettings.h"

#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Preferences.H>
#include <FL/filename.H>



TFLSettings::TFLSettings() = default;

TFLSettings::~TFLSettings() = default;


void TFLSettings::ShowSettingsPanelModal()
{
    mSettingsPanel->show();
    while (mSettingsPanel->visible())
        Fl::wait();
}


void TFLSettings::ShowSettingsPanel()
{
    runningMode();
    mSettingsPanel->show();
}


void TFLSettings::ShowAboutDialog()
{
    if (!mAboutDialog)
        mAboutDialog = createAboutDialog();
    mAboutDialog->show();
}


void TFLSettings::setApp(TFLApp *App, const char *AppPath) {
    app = App;
    appPath = strdup(AppPath);
    char *end = (char*)fl_filename_name(appPath);
    if (end)
        *end = 0;
}

void TFLSettings::loadPreferences() {
    char buf[FL_PATH_MAX];

    Fl_Preferences prefs(Fl_Preferences::USER, "robowerk.com", "einstein");

    // general preferences
    prefs.get("dontShow", dontShow, 0);

    // ROM Preferences
    Fl_Preferences rom(prefs, "ROM");

    strcpy(buf, appPath);
    strcat(buf, "717006");
    rom.get("path", ROMPath, buf);

    rom.get("machine", machine, 0);
    SetMachineID(machine);

    // Flash Preferences
    Fl_Preferences flash(prefs, "Flash");

    prefs.getUserdataPath(buf, FL_PATH_MAX-15);
    strcat(buf, "internal.flash");
    flash.get("path", FlashPath, buf);

    // screen preferences
    Fl_Preferences screen(prefs, "Screen");
    screen.get("width", screenWidth, 320);
    screen.get("height", screenHeight, 480);
    screen.get("fullScreen", fullScreen, 0);
    screen.get("hideMouse", hideMouse, 0);
    screen.get("useMonitor", useMonitor, 0);

    // Memory preferences
    Fl_Preferences memory(prefs, "Memory");
    memory.get("RAMSize", RAMSize, 64);
}

void TFLSettings::savePreferences() {
    Fl_Preferences prefs(Fl_Preferences::USER, "robowerk.com", "einstein");

    // general preferences
    prefs.set("dontShow", dontShow);

    // ROM Preferences
    Fl_Preferences rom(prefs, "ROM");
    rom.set("path", ROMPath);
    rom.set("machine", machine);

    // Flash Preferences
    Fl_Preferences flash(prefs, "Flash");
    flash.set("path", FlashPath);

    // screen preferences
    Fl_Preferences screen(prefs, "Screen");
    screen.set("width", screenWidth);
    screen.set("height", screenHeight);
    screen.set("fullScreen", fullScreen);
    screen.set("hideMouse", hideMouse);
    screen.set("useMonitor", useMonitor);

    // Memory preferences
    Fl_Preferences memory(prefs, "Memory");
    memory.set("RAMSize", RAMSize);
}

void TFLSettings::SetMachineID(int inMachine)
{
    if (MachineID) {
        free(MachineID);
        MachineID = nullptr;
    }
    switch (inMachine) {
        case 0: MachineID = strdup("717006"); break;
        case 1: MachineID = strdup("737041"); break;
        case 2: MachineID = strdup("747129"); break;
    }
}


