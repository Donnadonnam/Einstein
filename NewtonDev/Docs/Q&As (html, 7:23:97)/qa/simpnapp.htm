<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Creating a Simple NewtApp</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Creating a Simple NewtApp</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Creating a Simple NewtApp  (4/7/97)</H3><DL><DD>Q:    What are the basic steps to create a simple NewtApp-based application?<BR><BR>A:    The following steps will create a basic NewtApp-based application:<BR><BR>    <B>Basic Setup</B><BR>    1)    Create a project.<BR>    2)    In NTK's Project Settings dialog, set Platform to "Newton 2.0" or "Newton 2.1".<BR><BR>    <B>Create the NewtApp base view<BR>    </B>1)    Create a layout file.<BR>    2)    Drag out a <CODE>newtApplication</CODE>.<BR>    3)    Set the following slots to the following values:<BR>        <CODE><PRE>        allLayouts:    {</PRE><BR>                default:    GetLayout("default.t"),    </CODE>// see step 9 in the next section<CODE><BR>                overview:    GetLayout("Overview.t"),    </CODE>// set step 4, overview section<CODE><BR>            }</CODE><BR><CODE><PRE>    allSoups:       {        mySoup: {            _proto: newtSoup,            soupName: "SoupName:SIG",            soupIndices: [],            soupQuery: {}  } }    title: kAppName</PRE><BR></CODE>    4)    Draw a <CODE>newtClockFolderTab </CODE>or <CODE>newtFolderTab </CODE>as a child of the <CODE>newtApp</CODE>.<BR>    5)    Draw a <CODE>newtStatusBar </CODE>as a child of the <CODE>newtApp</CODE>.<BR>    6)    For the <CODE>newtStatusBar </CODE>set the following slots:<BR><CODE><PRE>    menuLeftButtons:  [newtInfoButton]    menuRightButtons: [newtActionButton, newtFilingButton]</PRE><BR></CODE>    7)     Save the layout file as <CODE>"main.t" </CODE>and add it to the project.<BR><BR><B>    Create the default view</B>:<BR>    1)    Create another layout file.<BR>    2)    Draw a <CODE>newtLayout </CODE>in the new layout file.<BR>    3)   Add a <CODE>viewJustify </CODE>slot to the <CODE>newtLayout </CODE>and set it to <CODE>parentRelativeFull </CODE>horizontal and vertical.<BR>    4)    Set the <CODE>viewBounds </CODE>of the <CODE>newtLayout </CODE>to:  <BR>        <CODE><PRE>        {top: 20, // leave room for the folder tab    bottom: -25,  // leave room for the status bar    left: 0,     right: 0}</PRE><BR></CODE>    5)    Draw a <CODE>newtEntryView </CODE>as a child of the <CODE>newtLayout</CODE>.<BR>    6)    Add a <CODE>viewJustify </CODE>slot and set it to <CODE>parentRelativeFull </CODE>horizontal and vertical (necessary only until platform file is updated).<BR>    7)    Set the <CODE>viewBounds </CODE>of the newtEntryView to: <BR>        <CODE><PRE>        {top: 0, bottom: 0, right: 0, left: 0};</PRE><BR></CODE>    8)    Draw slot views as children of the entry view to display slots from the soup entry.          <BR>        For example:<BR>        a)      Draw a <CODE>newtLabelInputLine </CODE>as a child of the <CODE>newtEntryView</CODE>.<BR>        b)      Set the following slots:<BR><CODE><PRE>        label:  "My Label"        path:   'myTextSlot</PRE><BR></CODE>        c)      Draw a <CODE>newtLabelNumInputLine </CODE>as a child of the <CODE>newtEntryView</CODE>.<BR>        d)      Set the following slots:<BR><CODE><PRE>        label:  "Number"        path:   'myNumberSlot</PRE><BR></CODE>    9)    Save the layout file as <CODE>"default.t"</CODE> and add it to the project. Move it so that it is compiled before the main layout (use the Process Earlier menu item).<BR><BR><B>    Add Overview support<BR></B>    1)    Create another layout file.<BR>    2)    Draw a <CODE>newtOverLayout </CODE>in the new layout file.<BR>    3)    Add the <CODE>Abstract </CODE>slot to the <CODE>newtOverLayout</CODE>, for example:<BR>            <CODE><PRE>            Abstract := func(item, bbox )        begin            local t := item.myTextSlot & ",";            if item.myNumberSlot then                t := t && NumberStr(item.myNumberSlot);            MakeText(t, bbox.left+18, bbox.top,                bbox.right, bbox.bottom - 18);        end;</PRE><BR></CODE>    4)    Save the layout file as "overview.t" and add it to the project. Move it so that it is compiled before the main layout (use the Process Earlier menu item).<BR><BR><B>    Add InstallScript and RemoveScript<BR></B>    1)    Create a text file and add the following to it:<BR><CODE><PRE>    InstallScript := func(partFrame) begin    partFrame.removeFrame :=        (partFrame.theForm):NewtInstallScript(partFrame.theForm);    end;    RemoveScript := func(partFrame) begin         (partFrame.removeFrame):      NewtRemoveScript(partFrame.removeFrame);    end;</PRE><BR></CODE>    2)    Save the text file and add it to the project.</DL>