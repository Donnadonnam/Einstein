<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Getting the Current Set of Multi-User Names</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Getting the Current Set of Multi-User Names</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Getting the Current Set of Multi-User Names  (3/17/97)</H3><DL><DD>Q:    How can I get a list of all the students when a unit that supports it (for instance, the Apple eMate 300) is in multi-user mode?<BR><BR>A:    The multi-user mode is implemented by the Home Page built-in application, and the list of users is stored in that application's preferences frame.  Use <CODE>GetAppPrefs</CODE> to get the prefs for that application for read-only purposes.  Only the documented slots in that frame should be accessed.  Other slots are neither documented nor supported, and their behavior may change.  You should also check to ensure that the Home Page application exists on a particular unit before using any features.  For example, here is a code snippet that evaluates to an array of user names, or NIL if the unit does not support multiple users or is not in multi-user mode.<BR><BR><CODE><PRE>    if GetRoot().HomePage then         begin            local prefs := GetAppPrefs('HomePage, '{});            if prefs.users and prefs.kMultipleUsers then                foreach item in prefs.users collect item.name;        end;</PRE><BR></CODE><BR>    The Home Page preferences frame contains the following slots that may be accessed read only:<BR>        <CODE>kMultipleUsers</CODE>:        non-nil if multi-user mode is enabled<BR>        <CODE>kRequirePassword</CODE>     non-nil if passwords required in multi-user mode<BR>        <CODE>kDisallowNewUsers</CODE>    non-nil if new users can't be created at login<BR>        <CODE>users</CODE>                    array of user frames or NIL.<BR><BR>    A user frame contains the following slot that you may use as read-only data:<BR>        <CODE>name</CODE>                    a string, the user-visible user's name<BR><BR>    Keep in mind that new users could be created or existing users names may be changed at any time, and there is no notification when this happens.  If necessary, you should check the set of users when your application launches.  It is unlikely that new users will be created, deleted, or renamed while an application is open, unless this happens as a result of a new user being created at login.  In this case, registering for change in the user configuration frame with <CODE>RegUserConfigChange</CODE> and watching for the <CODE>'kCurrentUser</CODE> slot to change will let you catch changes to the current set of multi-user names.<BR></DL>