# Take away the pound sign '#' from the next command WHEN YOU HAVE SET YOUR PREFS!!!Set NCTPrefsValid 1; Export NCTPrefsValid## The following turns off MPW Shell 3.4.1b4 "Dragging Text Out" option ## So the silly hand is not appearing all the time in MPWSet AllowDraggingOut 0 ; export AllowDraggingOutIf "{{User}}" == ""	Alert "Important: please quit MPW, set the “Owner Name” field in the Sharing Setup control panel, then restart MPW."EndIf "{{UserInitials}}" == ""# replace the XXX below with your user initials 	Set UserInitials "XXX"	Export UserInitials Endif "{CPlusScratch}" == ""	Set CPlusScratch "{NCTScratch}"endif "`Exists "RAM Disk:"`"  ≠ ""	Set CPlusScratch "RAM Disk:" endExport CPlusScratch# The compare active files menu items rely on the setting of the myMonitorType variable below# The options are: [-9 | -LC | -13 | -16 | -Portrait | -TwoPage | -b x y]If "{myMonitorType}" == ""	set myMonitorType "-TwoPage"	export myMonitorTypeEnd#Set and export SendNCTResultsToWorksheet to have the results#	sent to the end of your worksheet.  If not set results just go to standard out.Set SendNCTResultsToWorksheet 1 ; Export SendNCTResultsToWorksheet# Set and export NCTResultsFile to see the results in a seperate, unsaved file. #	Overrides SendNCTResultsToWorksheet.Set NCTBuildResultsFile "{NCTBuildResults-dir}NCTBuildResults" ; Export NCTBuildResultsFile#	Set and export NCTSendSearchResultsToWorksheet to have the results#	sent to the end of your worksheet.  If not set results just go to standard out.Set NCTSendSearchResultsToWorksheet 1 ; Export NCTSendSearchResultsToWorksheet#	Set and export NCTSearchResultsFile to see the results in a seperate, unsaved#	file. Overrides SendNCTSearchResultsToWorksheet. Set NCTSearchResultsFile "{NCTBuildResults-dir}NCTSearchResults" ; Export NCTSearchResultsFile#	Set and export NCTAlwaysClearSearchResults to clear the separate unsaved file, if#	NCTSearchResultsFile is set.Set NCTAlwaysClearSearchResults 1 ; Export NCTAlwaysClearSearchResults# Set and export DoIt to execute Make.outs with {DoIt}#  DoIt options are:	"DoIt"				Use DoIt script#					"OnWorksheet"			Display commands on worksheet#					"Silent"				Don't display any commands	Set Doit "DoIt"			; Export Doit#	Set DoIt "OnWorksheet"	; Export DoIt#	Set Doit "Silent"		; Export Doit#	Set and export DontinstallNCTSearchMenu if you don't want the search commands added to Find menu#	Overrides the definition of NCTSearchMenuName below (which is ignored if this is set)#Set DontInstallNCTSearchMenu 1 ; export DontInstallNCTSearchMenu#	Set and export NCTSearchMenuName to the menu name you want the search menu#   to have.  if you don't set this shell variable the search items will be appended to the Find menu#Set NCTSearchMenuName "NCT Search"  ; export NCTSearchMenuName#   option for licensee use of NCT Build system only#   Set and export NCT_Debugger_name to determine the name of the NCT debugger to launch #   with the "Lanuch {NCT_Debugger_name}..." menu item; Default is set to "Newtsbug" elsewhere#   BE SURE TO PLACE the debugger you define here in a folder named by MPW commands path! #   such as the {MPW}NCT_Folder:Tools:#Set NCT_Debugger_name "Hammer6" ; export NCT_Debugger_name #	uncomment the line below if you want CheckIn {Active} & friends to do revision history comments## Set NCTProjectHeaders 1 ; Export NCTProjectHeaders# READ THIS COMPLETELY BEFORE YOU CHANGE THIS!! # THEN REMOVE ‘#’ CHARACTER FROM THE LINE BELOW THAT BEGINS “#Set NCT-NTKapplname...”# THEN select "Reinitialize NCT System" from the MPW Newton C++ Tools menu and# follow the steps described below.## Do it yourself option for Apple Event integration between # Newton C++ Tools project Makefiles and Newton Toolkit.## Defining the NCT-NTKapplname variable will enable # the addition of an extra line as the last step in the Makefile build rules for # creating a C++ Tools NativeModule file.  You may need to change the line below# to be the name of the version of NTK you actually have running along with MPW.##    The integration with NTK is not bulletproof or automatic.##    All of the following must be true for this to work:#	  1) you must uncomment the line below and change the name #			to match the actual name of NTK on your system.#			if you later rename the Newton Toolkit application program#           and forget to edit the name below to match this will stop working.#	  2) you must rebuild the Makefile for your project(s) to add the SendAE cmd#	  3) you must make some change to your C++ sources or#			execute ‘delete :Objects:≈.ntkc’ after selecting your #			C++ project from the C++ Tools menu #			(i.e. your C++ project must need to be rebuilt for SendAE cmd to happen)#     4) NTK and MPW must both be running before you invoke the #			"Build current project" menu item from the MPW Newton C++ Tools menu.# 			If NTK is not running the message below will appear in the BuildResults#			window:      "Cannot find application NEWTON TOOLKIT 1.6"# 	  5) NTK must have the NTK project open that imports the #			.ntkc NativeModule file from your current C++ Tools project; #        	i.e. if you have some OTHER NTK project open that OTHER NTK #			project will get built and you will NOT get any warning that #			the C++ Native Module you just built was not part of the NTK project.#     6) When MPW sends the appropriate Newton Toolkit Apple Event to NTK, #			NTK is not the frontmost application (MPW is). Thus, NTK will build#			whatever NTK project is open in the background. So if you want to see#        	what NTK is doing you must click in an NTK window to bring it to the front.#	  7) Note that #			1) IF you have your NTK "Toolkit Preferences" setup with#				"Auto Download After Building Package" enabled.#			2) AND you have enabled "Delete old package on download" option in #				the Package Settings (via the NTK "Project Settings" menu item)#			3) AND you have the NTK Inspector connected to your MessagePad 120#				or other Newton product (with Newton OS 2.0) via the Toolkit App#			THEN the "build" Apple Event sent to NTK will cause the package#				to be rebuilt with the new C++ Native Module included and #				the package will be automatically downloaded (replacing the prior#               version of the package in your MessagePad 120)#			Thus you can change something in your C++ Native Module sources and #			rebuild everything and automatically download the result for testing#			with the "Build current project" menu item in MPW!   way cool  nes pa?#			#Set NCT-NTKapplName "Newton Toolkit 1.6" ; export NCT-NTKapplName