// Text of project ExtensionTap.¹ written on 9/22/97 at 2:52 PM// Beginning of text file Project Constants/*  **      Newton Developer Technical Support Sample Code****      ExtensionTap, a package part sample****      by Ryan Robertson, Newton Developer Technical Support****      Copyright © 1997 by Apple Computer, Inc.  All rights reserved.****      You may incorporate this sample code into your applications without**      restriction.  This sample code has been provided "AS IS" and the**      responsibility for its operation is 100% yours.  You are not**      permitted to modify and redistribute the source as "DTS Sample Code."**      If you are going to re-distribute the source, we require that you**      make it clear in the source that the code was descended from**      Apple-provided sample code, but that you've made changes. */constant kAboutString := "ExtensionTap ©1997 Apple Computer, Inc.  All rights reserved.\n\nA description of the part goes here.";constant kTestMinAppSize	:= nil;constant kTestMaxAppSize	:= nil;constant kMinWidth 			:= 180;constant kMinHeight 			:= 90;constant kMaxWidth 			:= 220;constant kMaxHeight 			:= 110;// End of text file Project Constants// Beginning of text file Part Data/*  **      Newton Developer Technical Support Sample Code****      ExtensionTap, a package part sample****      by Ryan Robertson, Newton Developer Technical Support****      Copyright © 1997 by Apple Computer, Inc.  All rights reserved.****      You may incorporate this sample code into your applications without**      restriction.  This sample code has been provided "AS IS" and the**      responsibility for its operation is 100% yours.  You are not**      permitted to modify and redistribute the source as "DTS Sample Code."**      If you are going to re-distribute the source, we require that you**      make it clear in the source that the code was descended from**      Apple-provided sample code, but that you've made changes. */InstallScript := func( partFrame )begin	// Install whatever is necessary from hereend;RemoveScript := func( partFrame )begin	// Remove whatever was installed from hereend;// This is necessary so that the icon is filed in the extensions folderSetPartFrameSlot( 'labels, '_extensions );// End of text file Part Data// Beginning of file ExtensionTap.lyt_v180_0 :=    {viewBounds: {left: 0, top: 0, right: 220, bottom: 110},     viewJustify: 80,     viewSetupFormScript:       func()       begin       	// start by being as big as possible, we will shrink later       	self.viewJustify := vjParentCenterH + vjParentCenterV;       	       	// Setup the bounds based on the screen size or based on        	// a couple of compile time flags.       	if kTestMinAppSize then       		self.viewBounds := SetBounds( 0,0, kMinWidth, kMinHeight );       	else if kTestMaxAppSize then       		self.viewBounds := SetBounds( 0,0, kMaxWidth, kMaxHeight );       	else       		self.viewBounds := SetBounds( 0,0,       										GetAppParams().appAreaWidth,       										GetAppParams().appAreaHeight );       	       	// shrink if needed for max width/height       	local bordersize := BAND(self.viewformat, vfPenMask)>>vfPenShift       								+BAND(self.viewformat, vfInsetMask)>>vfInsetShift;       	local fullScreenWidth := self.viewBounds.right-2*borderSize;       	local fullScreenHeight := self.viewBounds.bottom-2*borderSize;       	       	// Now setup the appropriate view bounds.       	if fullScreenWidth > kMaxWidth OR fullScreenHeight > kMaxHeight then       		begin       			// not full screen, so inset remainder and room for border       			self.viewBounds.right := Min(fullScreenWidth, kMaxWidth);       			self.viewBounds.bottom := Min(fullScreenHeight, kMaxHeight);       		end;       	else       		begin       	      // really are full screen, so no border, no clickable (assumes dragger)       			self.viewFormat := vfNone;       			self.viewFlags := BAND(self.viewFlags, BNOT(vClickable));       		end;       	       	// If the screen is too small then create a message to display to the user       	local message;       	if self.viewBounds.right < kMinWidth then       		message := "The display is to narrow for " & kAppName & " to open"       	else if self.viewBounds.bottom < kMinHeight then       		message := "The display is to short for " & kAppName & " to open";              	// If there is a message, then close the application and display the message       	if message then       		begin       			self.viewBounds := SetBounds( 0, 0, 0, 0 );       			GetRoot():Notify( kNotifyAlert, kAppName, message );       			AddDelayedCall(func(v)       				begin       					RemoveSlot(v, 'viewbounds);       					v:Close();       				end,       				[self], 1);       		end;              	inherited:?viewSetupFormScript();		// this method is defined internally       end,     viewQuitScript:       // must return the value of inherited:?ViewQuitScript()       func()       begin       	// Remove the RAM version of viewFormat so       	// that we don't have anything left over from       	// what was setup in the viewSetupFormScript       	RemoveSlot( self, 'viewFormat );       	       	inherited:?ViewQuitScript();       end,     ReorientToScreen: ROM_DefRotateFunc,     _proto: @180 /* protoFloatNGo */    };_v180_0_v218_0 :=    {text: kAboutString,     viewBounds: {left: 10, top: 25, right: -10, bottom: -25},     viewJustify: 240,     _proto: @218 /* protoStaticText */    };AddStepForm(_v180_0, _v180_0_v218_0);_v180_0_v229_0 :=    {title: kAppName,     viewBounds: {left: 0, top: 0, right: 72, bottom: 16},     _proto: @229 /* protoTitle */    };AddStepForm(_v180_0, _v180_0_v229_0);// After Script for _v180_0thisView := _v180_0;/*  **      Newton Developer Technical Support Sample Code****      ExtensionTap, a package part sample****      by Ryan Robertson, Newton Developer Technical Support****      Copyright © 1997 by Apple Computer, Inc.  All rights reserved.****      You may incorporate this sample code into your applications without**      restriction.  This sample code has been provided "AS IS" and the**      responsibility for its operation is 100% yours.  You are not**      permitted to modify and redistribute the source as "DTS Sample Code."**      If you are going to re-distribute the source, we require that you**      make it clear in the source that the code was descended from**      Apple-provided sample code, but that you've made changes. */constant |layout_ExtensionTap.lyt| := _v180_0;// End of file ExtensionTap.lyt