<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Don't Use ROM_UpArrowBitmap</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Don't Use ROM_UpArrowBitmap</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Don't Use ROM_UpArrowBitmap  (3/28/97)</H3><DL><DD>Q:    I used the constant <CODE>ROM_UpArrowBitmap</CODE> in my application, and now my app appears partially invisible in the Newton 2.1 OS.  What's wrong?<BR><BR>A:    The constant <CODE>ROM_UpArrowBitmap</CODE> and the other directional arrow constants were not intended to be supported, and the value of the magic pointer has changed in Newton 2.1 OS.  The change was made to better implement the (documented and supported) scrolling protos such as <CODE>protoUpDownScroller</CODE>.<BR><BR>    <CODE>ROM_UpArrowBitmap</CODE> is named in the NTK Platform File defs file, and had mistakenly been mentioned in some public documentation from Apple, so you may have thought this was supported.  If you have a reference to one of these magic pointers in the <CODE>icon</CODE> slot of a <CODE>clPictureView</CODE>, you'd have gotten an arrow graphic on the 2.0 and earlier releases of the OS, but on the Newton 2.1 OS, the changed value is not acceptable to the view system as a graphic.  The result is that drawing is aborted when the OS tries to render the view with the arrow graphic, and views that would normally be drawn after the bad view will also fail to render, producing what appear to be invisible views that are otherwise functional.<BR><BR>    You should use the documented protos to implement scrolling.  If a custom scroller is needed, you can create your own graphic and include it in your NTK project.</DL>