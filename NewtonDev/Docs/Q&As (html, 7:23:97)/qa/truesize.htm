<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: TrueSize Incorrect for Soup Entries</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>TrueSize Incorrect for Soup Entries</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>TrueSize Incorrect for Soup Entries  (2/6/96)</H3><DL><DD>Q:    When I use <CODE>TrueSize </CODE>to get the size of a soup entry I get results like 24K or even 40K for the size.  That can't  be right.  What's going on?<BR><BR>A:    <CODE>TrueSize </CODE>"knows" about the underlying implementation of soup entries.  A soup entry is really a special object (a fault block) that contains information about how to get an entry and can contain a cached entry frame.  In the information about how to get an entry, there is a reference to the soup, and various caches in a soup contain references to the cursors, the store, and other (large) NewtonScript objects.  <CODE>TrueSize  </CODE>is reporting the space taken up by all of these objects.  (Note: calling <CODE>TrueSize</CODE> on a soup entry will force the entry to be faulted in, even if it was not previously taking up space in the NewtonScript heap.)<BR><BR>    The result is that <CODE>TrueSize </CODE>is not very useful when trying to find out how much space the cached frame for an entry is using.  A good way to find the space used for a cached entry frame is to call g<CODE>c(); stats();</CODE> record the result, then call <CODE>EntryUndoChanges(entry); gc(); stats()</CODE>.  The difference between the two free space reports will be the space used by the cached frame for a given entry.<BR><BR><CODE>    EntryUndoChanges(entry)</CODE> will cause any cached frame to be removed and the entry to return to the unfaulted state.  Gc() then collects the space previouly used by the cached entry frame.<BR><BR>    If you want the <CODE>TrueSize </CODE>breakdown  of the types of objects used, you can <CODE>Clone </CODE>the entry and call <CODE>TrueSize </CODE>on the copy.  This works because the copy is not a fault block, and so it does not reference the soups/cursors/stores.</DL>