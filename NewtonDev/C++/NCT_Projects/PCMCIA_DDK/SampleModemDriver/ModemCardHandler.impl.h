/*	File:		ModemCardHandler.impl.h	Contains:	Sample modem card handler interface definitions	Copyright:	© 1993-1994 by Apple Computer, Inc., all rights reserved.	Derived from v1 internal.*/#ifndef __ModemCardHandler_IMPL_H#define __ModemCardHandler_IMPL_H#ifndef __CARDHANDLER_H	#include "CardHandler.h"#endif#ifndef __CARDPCMCIA_H	#include "CardPCMCIA.h"#endif#ifndef __CARDSOCKET_H	#include "CardSocket.h"#endif////  "Card Specific" call selectors...//#define kCardPowerOn 	1#define kCardPowerOff 	2////	TCardHandlerModemSample	Card handler for modem card//#define	_CardHandlerClassName_				TCardHandlerModemSample#define _CardSpecificDriverProtocolName_	TSerialChip#define _CardSpecificDriverClassName_		TSerialChipSample#define	_sCardHandlerClassName_				"TCardHandlerModemSample"#define _sCardSpecificDriverProtocolName_	"TSerialChip"#define _sCardSpecificDriverClassName_		"TSerialChipSample"class _CardSpecificDriverProtocolName_;PROTOCOL _CardHandlerClassName_ : public TCardHandler	PROTOCOLVERSION(1.0){	public:		PROTOCOL_IMPL_HEADER_MACRO(_CardHandlerClassName_);		TCardHandler*	New(void);											// PROTOCOL constructor		void			Delete (void);										// PROTOCOL destructor		NewtonErr		RecognizeCard(TCardSocket* socket, TCardPCMCIA* card);			// Recognize card		NewtonErr		ParseUnrecognizedCard(TCardSocket* socket, TCardPCMCIA* card);	// Recognized unparsed card (do your own parsing)		NewtonErr		InstallServices(TCardSocket* socket, TCardPCMCIA* card, ULong configNumber=0);		NewtonErr		RemoveServices(void);								// Install/Remove services		NewtonErr		SuspendServices(void);								// Suspend/Resume services		NewtonErr		ResumeServices(TCardSocket* socket, TCardPCMCIA* card, ULong configNumber=0);		NewtonErr		EmergencyShutdown(void);							// EmergencyShutdown when card is away (from interrupt handler)		NewtonErr		FormatCIS(TCardSocket* socket, TCardPCMCIA* card);	// Format CIS		char*			CardIdString(TCardPCMCIA* card);					// Card identification string		ULong			CardStatus(void);									// In CardDefines.h TCardStatus		ULong			GetNumberOfDevice(void);		void			GetDeviceInfo(ULong deviceNumber, ULong* cardType, TObjectId* cardPhys, void** cardDriver, ULong* deviceOffset, ULong* deviceSize);		void			SetCardServerPort(TObjectId port);					// Set card server port		void			SetRemovableHandler(Boolean removable);				// Removable means the card handler		Boolean			GetRemovableHandler(void);							//	will be removed when card removed		NewtonErr		CardSpecific(ULong selector, void* ptr=0, ULong something=0);	private:		void			Clear(void);		char			fCardIdString[kCardNameNumberOfChars];		Boolean			fRemovableHandler;		UChar			fConfigIndex;		volatile UByte*	fConfigOptionRegPtr;		TCardSocket*	fCurrentSocket;		ULong			fDeviceType;		ULong			fDeviceOffset;		_CardSpecificDriverProtocolName_*	fDeviceDriver;			// serial chip object...};#endif //hasPCMCIA