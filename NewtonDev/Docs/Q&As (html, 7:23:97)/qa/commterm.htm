<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Communications With No Terminating Conditions</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Communications With No Terminating Conditions</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Communications With No Terminating Conditions  (6/9/94)</H3><DL><DD>Q:    How do I handle input that has no terminating characters and/or variable sized packets?<BR><BR>A:    Remember that input specs are specifically tied to the receive completion mechanism. To deal with the situations of no terminating characters or no set packet sizes, you need only realize that one receive completion is itself a complete packet. Set the <CODE>byteCount</CODE> slot of your input spec to the minimum packet size. In your input script, call <CODE>Partial</CODE> to read in the entire packet, and then call <CODE>FlushInput</CODE> to empty everything out for your next receive completion.<BR><BR>    If this is time-delay-based input, you may be able to take advantage of <CODE>partialScripts</CODE> with <CODE>partialFrequencies</CODE>.  Call the <CODE>Ticks</CODE> global function if necessary to determine the exact execution time of a <CODE>partialScript</CODE>.<BR></DL>