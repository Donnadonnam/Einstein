<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Limitations with NewtOverview Data Class</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Limitations with NewtOverview Data Class</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Limitations with NewtOverview Data Class  (1/8/97)</H3><DL><DD>Q:    I want to use code like <CODE>CreateTargetCursor('newtOverview, myItemArray) </CODE>in my application to simplify my code which handles overviews. Why would my print format throw an exception when I use this method?<BR><BR>A:    There are limitations to using the <CODE>'newtOverview</CODE> symbol as your data class with <CODE>CreateTargetCursor</CODE>. The biggest limitation is that it requires you to support exactly the set of of datatypes: <CODE>['frame, 'text, 'view].</CODE> In other words, you must register a <CODE>protoFrameFormat</CODE> (by default, it handles <CODE>'frame</CODE> and <CODE>'text</CODE> dataTypes) and a <CODE>protoPrintFormat</CODE>. However, there are two other limitations not mentioned in the final documentation: the system does not guarantee that it will call your print format's <CODE>formatInitScript</CODE> method or a format's <CODE>SetupItem</CODE> method.<BR><BR>    This means that if your print format's <CODE>viewSetupFormScript</CODE> (or other code in the print format) assumed that the <CODE>formatInitScript</CODE> has been called, it could cause errors and/or exceptions.  The workaround to this would be to set a flag in the <CODE>formatInitScript</CODE>; if it was not set at the beginning of <CODE>viewSetupFormScript</CODE>, send your format the <CODE>formatInitScript</CODE> message. Other problems could occur with <CODE>SetupItem</CODE>, but you'd probably not see any errors or exceptions until you tried to beam/mail a frame to another device and then tried to Put Away the item.<BR>    <BR>    About the default overview class: when you use <CODE>CreateTargetCursor</CODE> to prepare a "multiple item target", you may be able to use this special <CODE>'newtOverview</CODE> symbol as your data class. If your application prints every item on separate pages (in other words, not multiple items on one page) and you  want to split beam and mail items into separate items in the Out Box, this might be useful to you. For more information, see the Newton Programmers Guide (not reference) in the Routing chapter "Using the Built-in Overview Data Class" section and the "Move It!" article in the Newton Technology Journal 2.02. Also, check out the MultiRoute DTS sample.</DL>