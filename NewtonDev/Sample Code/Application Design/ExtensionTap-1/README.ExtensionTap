/*  **      Newton Developer Technical Support Sample Code****      ExtensionTap, a package part sample****      by Ryan Robertson, Newton Developer Technical Support****      Copyright © 1997 by Apple Computer, Inc.  All rights reserved.****      You may incorporate this sample code into your applications without**      restriction.  This sample code has been provided "AS IS" and the**      responsibility for its operation is 100% yours.  You are not**      permitted to modify and redistribute the source as "DTS Sample Code."**      If you are going to re-distribute the source, we require that you**      make it clear in the source that the code was descended from**      Apple-provided sample code, but that you've made changes. */ExtensionTap shows the correct way to give an extension a custom about slip.  This sample should be built with NTK 1.6.4 or higher.The default behavior of tapping on an icon in the extensions folder is to bring up a generic notification.  Below are the steps necessary to add a custom about slip to your extension.1) Change your part to be an application part instead of an auto part. To change the part type, choose "Project Settings" from the "Project Menu".  Then select "Output Settings".  This is necessary so that a slip can be displayed when the icon is tapped. 2) Add a layout to your project that is just a floater with the information you want to display. Mark this layout as the main layout. When the user taps on your part's icon, the system will open a view based on this floater. 3) Add the following code to your project text file to ensure that the icon will show up in the extensions folder and not the unfiled icons folder. 		SetPartFrameSlot( 'labels, '_extensions ); Note that application and auto parts have two important differences in the behavior of their InstallScript part functions:* The InstallScript for a form part only takes one argument, whereas the InstallScript of an auto part takes two arguments. * The InstallScript of a form part is EnsureInternal'ed, whereas an auto part's InstallScript is not EnsureInternal'ed. 