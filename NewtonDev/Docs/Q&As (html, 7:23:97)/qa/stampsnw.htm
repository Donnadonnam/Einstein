<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Unregistering Stamps in Newton Works Draw</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Unregistering Stamps in Newton Works Draw</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B>NEW: </B>Unregistering Stamps in Newton Works Draw  (7/2/97)</H3><DL><DD>Q:    When I call the Newton Works Draw stationery's <CODE>UnRegStamps</CODE> method, my registered stamps do not get unregistered.  What is going wrong?<BR><BR>A:    There is a bug in the Draw application's <CODE>UnRegStamps</CODE> method that causes stamps to remain registered.  Use the following code to unregister your stamps:<BR><BR><CODE><PRE>local viewDef := GetViewDefs( 'drawPaper ).default;if viewDef then    begin        // Call UnregStamps conditionally.  If the Draw application is not        // installed, GetViewDefs will return the "Missing Stationery"        // stationery.        viewDef:?UnregStamps( kStampRegistrySymbol );        local registry := GetViewDefs( 'drawPaper ).StampListRegistry;        if registry AND HasSlot( registry, kStampRegistrySymbol ) then            RemoveSlot( registry, kStampRegistrySymbol );    end;</PRE><BR></CODE><BR>    Note that calling the <CODE>UnRegStamps</CODE> method is required for future compatibility.</DL>