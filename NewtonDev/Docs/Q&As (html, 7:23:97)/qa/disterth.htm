<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: How to Find Distance Between Two Points on the Earth</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>How to Find Distance Between Two Points on the Earth</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>How to Find Distance Between Two Points on the Earth  (6/7/96)</H3><DL><DD>Q:    Is there an API which calculates the distance between two points on the Earth?<BR><BR>A:    Yes. In the Newton 2.0 ROM there is a global function called <CODE>CircleDistance</CODE> which takes two longitude/latitude pairs and the units to use in reporting the distance, and <CODE>CircleDistance</CODE> returns the distance between the two points.  NTK may give a warning about "<CODE>Unknown global function 'CircleDistance'</CODE>".  This warning can be safely ignored so long as you're writing a package for a Newton 2.0 OS device.<BR><BR>    <CODE>CircleDistance</CODE> (firstLong, firstLat, secondLong, secondLat, units)<BR><BR>    Returns the distance between the two points.  The distance is an integer.  Currently <CODE>CircleDistance</CODE> rounds the distance to the nearest ten miles or ten kilometers.<BR><BR><CODE>    firstLong</CODE>:  The longitude for the first point on the Earth.<BR><CODE>    firstLat</CODE>:  The latitude for the first point on the Earth.<BR><CODE>    secondLong</CODE>:  The longitude for the second point on the Earth.<BR><CODE>    secondLat</CODE>:  The latitude for the second point on the Earth.<BR><CODE>    units</CODE>:  A symbol specifying the units in which the distance will be calculated.  Currently the options are <CODE>'miles</CODE> or <CODE>'kilometers</CODE>.<BR><BR>    Note: the longitude and latitude arguments need to be integer values of the type used by <CODE>NewCity</CODE>.  Check the section titled "Using the Time Zone Application" in the Built-In Applications and System Data chapter of the Newton Programmer's Guide for information on how to convert a longitude or latitude in degrees, minutes & seconds to an integer for <CODE>CircleDistance</CODE>.</DL>