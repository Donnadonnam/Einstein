// =========== Header ===========// File:				Gestalt.cp// Project:				Gestalt// Written by:			Paul Guyot (pguyot@kallisys.net)//// Created on:			05/21/2001// Internal version:	1//// Copyright:			© 2001 by Paul Guyot.// 						All rights reserved worldwide.// ===========// =========== Change History ===========// 05/21/2001	v1	[PG]	Creation of the file// ===========#ifndef __NSANDDDKINCLUDES__	#include "NSandDDKIncludes.h"#endif#ifndef __NEWTONGESTALT_H	#include "NewtonGestalt.h"#endif#ifdef __cplusplus#define EXTERNC extern "C"#else#define EXTERNC#endif// ------------------------------------------------	////	GetMachineType( RefArg )// ------------------------------------------------	//// Return the machine type as an integer or NIL if an error occurred.EXTERNC Ref GetMachineType( RefArg rcvr ){	TUGestalt myGestalt;				// Create a Gestalt object on the stack.	TGestaltSystemInfo mySystemInfo;	// Create a System Info structure on the stack.	NewtonErr theErr = myGestalt.Gestalt( kGestalt_SystemInfo, &mySystemInfo, sizeof(mySystemInfo) );		// Gestalt, tell me what I am running on.	RefVar theResult;		if (theErr == noErr)		theResult = MAKEINT(mySystemInfo.fMachineType);	else		theResult = NILREF;		return theResult;}// ========================================================================= //// ... that the notions of "hardware", and "software" should be extended by  //// the notion of LIVEWARE - being that which produces software for use on    //// hardware.  This produces an obvious extension to the concept of MONITORS. //// A liveware monitor is a person dedicated to the task of ensuring that the //// liveware does not interfere with the real-time processes, invoking the    //// REAL-TIME EXECUTIONER to delete liveware that adversely affects ...       ////                 -- Linden and Wihelminalaan                               //// ========================================================================= //