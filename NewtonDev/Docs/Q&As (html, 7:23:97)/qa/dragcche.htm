<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Drag and Drop Caches the Background Bitmap</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Drag and Drop Caches the Background Bitmap</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Drag and Drop Caches the Background Bitmap  (7/15/96)</H3><DL><DD>Q:    I am trying to implement drag scrolling. Although I can scroll the contents of the window, when I drag the item back into the window, it strips away the updated (scrolled) contents and leaves the original (unscrolled) contents behind. How can I get this to work?<BR><BR>A:     Unfortunately, you have hit a design limitation of the Drag and Drop implementation. When you send the <CODE>DragAndDrop</CODE> message to a view, the bitmap for the pre-drag state is cached. Once the drag loop starts, you can not update that cached bitmap. When you "scroll" the view (probably using <CODE>RefreshViews</CODE>), you update the screen, but the cached bitmap is still there and is used by the <CODE>DragAndDrop</CODE> routine to update the screen as the dragged item is moved.</DL>