<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Horizontal Scrolling, Clipping, and Text Views</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Horizontal Scrolling, Clipping, and Text Views</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Horizontal Scrolling, Clipping, and Text Views  (2/7/96)</H3><DL><DD>Q:    I want to draw 80 columns in a <CODE>clParagraphView</CODE> that's inside a smaller view and be able to scroll back and forth.  When I try this, it always wraps at the bounds of the parent.  How can I create a horizontal scrolling text view?<BR><BR>A:    Normal paragraph views are written so that their right edge will never go beyond their parent.  This is done to avoid the circumstance where a user could select and delete some text from the left part of a paragraph in a <CODE>clEditView</CODE>, leaving the rest of it off screen and unselectable.<BR><BR>    What happens is the <CODE>viewBounds </CODE>of the <CODE>clParagraphView</CODE> are modified during creation of the view so that the view's right edge is aligned with the parent's right edge.  After that, wrapping is automatic.<BR><BR>    The so-called "lightweight" text views do not work this way.  You can force a paragraph to be lightweight by: 1) Making sure the <CODE>viewFlag</CODE> <CODE>vReadOnly</CODE> is set, 2) making sure <CODE>vCalculateBounds</CODE> and <CODE>vGesturesAllowed</CODE>, are off, and 3) not using <CODE>tabs</CODE> or <CODE>styles</CODE>.  Lightweight text views are not editable, but you can use <CODE>SetValue</CODE> to change their <CODE>text</CODE> slots dynamically.<BR><BR>    If you must use an editable <CODE>clParagraphView</CODE> or if tabs or styles are required, there is another workaround.  The code to check for clipping only looks one or two levels up the parent chain, so you could nest the paragraph in a couple of otherwise useless views which were large enough to prevent clipping, and let the clipping happen several layers up the parent chain.<BR></DL>