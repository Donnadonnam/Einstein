How do I create and use my own preferences slip in a newtApp basedapplication?In your application's base view create a slot called prefsView and placea template of your preferences slip there using the NTK GetLayoutfunction.  When the user selects "Prefs" in your application thenewtApp framework will create a view from the template found in theprefsView slot and open it.When your preferences view is opened a reference to your applicationsbase view is stored in a slot called theApp in the preferences view. Use this reference to call the applications GetAppPreferences method. This method will return a frame containing your applicationspreferences.  GetAppPreferences is a method provided by newtApp andshould not be overriden.When adding slots to the preferences frame you should either appendyour developer signature to the name of the preference (ie:'|Pref1:SIG|) or create a slot in the preferences frame using yourdeveloper signature and save all of your preferences in a frame in thatslot.  This will guarantee that you do not write over any slots used bythe newtApp framework.Here is an example of how to get the preferences frame, and add yourdata to it:	preferencesSlip.viewSetupFormScript := func()	begin		prefs := theApp:GetAppPreferences();		if NOT HasSlot( prefs, kAppSymbol ) then			prefs.(kAppSymbol) := {pref1: nil, pref2: nil};	end;			To save the preferences call the applications SaveAppState method.  	preferencesSlip.viewQuitScript := func()	begin		// save the preferences and remove two slots to assist in garbage collection.		theApp:SaveAppState();		RemoveSlot( self, 'theApp );		RemoveSlot( self, 'prefs );    end; In the preferences frame you will find a slot called internalStore. Setting this slot to true will force the newtApp framework to save allnew items on the internal store. 