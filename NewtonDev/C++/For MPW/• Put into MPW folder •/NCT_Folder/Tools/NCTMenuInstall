#Set Echo 1if {TraceFailures} ; Echo "## Beginning NCTMenuInstall script" ; endSet BuildNCTMenu-old-CaseSensitive "{CaseSensitive}"	# save the current valueSet CaseSensitive 0If "{BuildNCTCmdKey}" == ""	Set BuildNCTCmdKey '/J'EndDeleteMenu NCTSetup ∑ dev:null || Set Status 0# Delete all the old sub menus before deleting Newton C++ Tools so the menu bar doens't get messed upIf "{{NCT_OldMenusList}}" ≠ ""	For _folder_NCT in {NCT_OldMenusList}		DeleteMenu "{_folder_NCT}" ∑∑ dev:null || Set status 0	End #For dirctyEndDeleteMenu ROM_Images ∑ dev:null || Set status 0DeleteMenu "{NCTMenuName}" ∑ dev:null || Set Status 0Set savedDirectory "`directory -q`"AddMenu "{NCTMenuName}" "Build current Project{{BuildNCTCmdKey}}"  'Execute _SetNCTRedirection ; NCTRunBuildCommands {NCTredirection}'AddMenu "{NCTMenuName}" "{NCTBuildDebugItem}"  'Set NCT_DebugSwitch "{NCT-forDebug}" ;Set NCT-ObjectOut "{NCT-ObjectsDebug}" ;SetMenuItem "{NCTMenuName}" "{NCTBuildNoDebugItem}" -uncheck ; SetMenuItem "{NCTMenuName}" "{NCTBuildDebugItem}" -check'AddMenu "{NCTMenuName}" "{NCTBuildNoDebugItem}"  'Set NCT_DebugSwitch " " ;Set NCT-ObjectOut "{NCT-ObjectsNoDebug}" ;SetMenuItem "{NCTMenuName}" "{NCTBuildDebugItem}" -uncheck ; SetMenuItem "{NCTMenuName}" "{NCTBuildNoDebugItem}" -check'AddMenu "{NCTMenuName}" (- 	''AddMenu	"{NCTMenuName}" "Build Project Makefile" 'Execute _SetNCTRedirection ; NCTBuildMakeFile {NCTredirection}'AddMenu	"{NCTMenuName}" "Open Project Makefile" 'If "{NCT_cur_project}" && "`Exists "{NCT_Makefile-dir}Makefile"`" ≠ "" ; Open "{NCT_Makefile-dir}Makefile" ; else ; {NCT_DoesNotExist} ; end'# AddMenu	"{NCTMenuName}" "Open latest BuildResults" 'If "`Exists "{{NCTBuildResultsFile}}"`" ≠ "" ; Open "{NCTBuildResultsFile}" ; else ; {NCT_DoesNotExist} ; end'AddMenu "{NCTMenuName}" (- 	''# the variable was set to debug mode so check the menu item too.SetMenuItem "{NCTMenuName}" "{NCTBuildDebugItem}" -check  Set NCT_LaunchDebugrItemText "Launch {NCT_Debugger_name}"If "{{NCT_ROMImagesList}}" ≠ ""	AddMenu "{NCTMenuName}"   "{NCT_LaunchDebugrItemText} using"  'Execute NCTLaunchDebugger' 	For _aFile In {NCT_ROMImagesList}		AddMenu -asis ROM_Images "{_aFile}" 'set NCT_Cur_Image-path "'"{NCT_ROMImages-dir}{_aFile}"'"; Execute NCTLaunchDebugger'	End #For	AddMenu -link "{NCTMenuName}" "{NCT_LaunchDebugrItemText} using" "ROM_Images"Else	AddMenu "{NCTMenuName}" "{NCT_LaunchDebugrItemText}…{{NCTLaunchImageCmdKey}}" 'Execute NCTLaunchDebugger'End  if "`Exists "{NCTTools}NCTBuildRex"`"	If "{{NCT_configDirList}}" ≠ ""		AddMenu "{NCTMenuName}" "Build ROM Extension using" 'Execute NCTBuildREX'		For _aFile In {NCT_configDirList}			AddMenu -asis REX_DirList "{_aFile}" 'set NCT_Cur_Rex-dir "'"{NCTSources}{_aFile}:"'"; Execute NCTBuildRex'		End #For		AddMenu -link "{NCTMenuName}" "Build ROM Extension using" "REX_DirList" 	Else		AddMenu "{NCTMenuName}" "Build ROM Extension…" 'set NCT_Cur_Rex-dir "" ; Execute NCTBuildRex'	EndendAddMenu "{NCTMenuName}" (- 			''AddMenu "{NCTMenuName}" 'Select NCT Root Directory' 	'Execute "{NCTTools}SetNCTProjects" ∑∑ "{WorkSheet}"'AddMenu "{NCTMenuName}" 'Reinitialize NCT System'		'Execute "{NCTTools}ActivateNCT" ∑∑ "{WorkSheet}"'AddMenu "{NCTMenuName}" 'Update NCT System From…'		'Duplicate -y "{NCTTools}NCTUpdateSystemFrom" "{NCTScratch}"; flush; "{NCTScratch}NCTUpdateSystemFrom" ∑∑ "{WorkSheet}" || Set Status 0 ; Delete "{NCTScratch}NCTUpdateSystemFrom"'AddMenu "{NCTMenuName}" "Create “_NCT” Folder…" '"{NCTTools}NCTCreateFolder" "_NCT" ∑∑ "{WorkSheet}"'if "`Exists "{NCTTools}DefineDDKVariables"`" ≠ ""	AddMenu "{NCTMenuName}" "Create “_DDK” Folder…" '"{NCTTools}NCTCreateFolder" "_DDK" ∑∑ "{WorkSheet}"'endAddMenu "{NCTMenuName}" "Create New Project…" 'Execute "{NCTTools}NCTCreateProject" ∑∑ "{WorkSheet}"'AddMenu "{NCTMenuName}" (- 			''If "{{NCT_ProjectsList}}" ≠ ""	For dircty in {NCT_ProjectsList}		DeleteMenu "{dircty}" ∑∑ dev:null || Set status 0		Directory "{NCTSources}{dircty}:" ∑∑ dev:null				Set _proj_DirctyList "``Files -d ``"		Set _subproj_list ""		If "{{_proj_DirctyList}}" ≠ ""			For subdircty In {_proj_DirctyList}				if `Evaluate "{subdircty}" =~ /:(Example≈)®1:/`					Set _subproj_list "{{_subproj_list}}∂"{®1}∂" "				else if `Evaluate "{subdircty}" =~ /:(≈Tool≈)®1:/`					Set _subproj_list "{{_subproj_list}}∂"{®1}∂" "				else if "`Exists "{subdircty}"Makefile`" ≠ "" || "`Exists "{subdircty}"FilesInBuild`" ≠ ""					if `Evaluate "{subdircty}" =~ /:(≈)®1:/`		# this Evaluate should always be true						Set _subproj_list "{{_subproj_list}}∂"{®1}∂" "					else						Echo "## Error: Evalute failure in NCTMenuInstall that should never happen"					end				end			End #For		End		If "{{_subproj_list}}" ≠ ""			AddMenu "{NCTMenuName}" "{dircty}" 'AddMenu -link "'"{NCTMenuName}∂" ∂"{dircty}∂" ∂"{dircty}∂" "' ∑∑ "{WorkSheet}"'			For _subproj_ in {_subproj_list}				AddMenu -asis "{dircty}" "{_subproj_}" "Set NCT_new_project  ∂"{dircty}:{_subproj_}:∂""' ; Execute SelectNCTProject ∑∑ "{WorkSheet}"'			End #For			AddMenu -link "{NCTMenuName}" "{dircty}" "{dircty}"		Else			if "`Exists :Makefile`" ≠ "" || "`Exists :FilesInBuild`" ≠ ""				AddMenu -asis "{NCTMenuName}" "{dircty}" "Set NCT_new_project  ∂"{dircty}:∂""' ; Execute SelectNCTProject ∑∑ "{WorkSheet}"'			Else				AddMenu -asis "{NCTMenuName}" "{dircty}" "Set NCT_new_project  ∂"{dircty}:∂""' ; Execute SelectNCTProject ∑∑ "{WorkSheet}"'				AddMenu "{dircty}" "folders or files not found" "Set NCT_new_project  ∂"{dircty}:∂"" ' ;  Execute SelectNCTProject ∑∑ "{WorkSheet}"'				AddMenu -link  "{NCTMenuName}" "{dircty}" "{dircty}"			End		End						End #For dirctyElse	AddMenu "{NCTMenuName}" "no project folders found" 'Execute SetNCTProjects ∑∑ "{WorkSheet}"'EndDirectory "{savedDirectory}" || (echo "## unable to restore directory in NCTMenuInstall" ; exit 2)#Unset savedDirectory Set CaseSensitive "{BuildNCTMenu-old-CaseSensitive}"	# not quite a restore if CaseSensitive was unset, but good enoughUnset BuildNCTMenu-old-CaseSensitive