/***      Newton Developer Technical Support Sample Code****      by Ryan Robertson, Newton Developer Technical Support****      Copyright © 1997 by Apple Computer, Inc.  All rights reserved.****      You may incorporate this sample code into your applications without**      restriction.  This sample code has been provided "AS IS" and the**      responsibility for its operation is 100% yours.  You are not**      permitted to modify and redistribute the source as "DTS Sample Code."**      If you are going to re-distribute the source, we require that you**      make it clear in the source that the code was descended from**      Apple-provided sample code, but that you've made changes.*/constant kSendSizeTypeString				:= "Send Size Settings";constant kSendFlagsTypeString				:= "Send Flags Slot Settings";constant kSendChunkString					:= "Binary Target Settings";constant kSendBinaryGenerationString	:= "Binary Generation Settings";constant kSendFrameGenerationString		:= "Frame Generation Settings";constant kSendStringGenerationString	:= "String Generation Settings";constant kSendNumberGenerationString	:= "Number Generation Settings";constant kSendBytesGenerationString		:= "Bytes Generation Settings";DefineGlobalConstant( 'kOutputInformationTemplate,	{		size:			0,		useVBO:		nil,		spec:			nil,		flagsTemp:	0,	} );DefineGlobalConstant( 'kOutputSpecifications, 	{		binary:	{form: 'binary, target: {offset: 0, length: 0}},		frame:	{form: 'frame},		number:	{form: 'number},		string:	{form: 'string},		bytes:	{form: 'bytes},	});	DefineGlobalConstant( 'kFlagsCheckboxTemplate,						{							_proto:					protoCheckbox,							viewValue:				nil,							text:						"text",							viewBounds:				SetBounds( 10, 25, 170, 41 ),							target:					nil,							helperTarget:			nil,							boxValue:				nil,							boxIndex:				nil,							valueChanged:			func()														begin															// we have to do some weird stuff here because one of the flags can															// have a value of zero.  We have to make sure to nil out the flags															// when none of the boxes are checked															if viewValue then																begin																	if NOT testModeFloaterBase.(target) then																		testModeFloaterBase.(target) := boxValue;																	else																		testModeFloaterBase.(target) := testModeFloaterBase.(target) + boxValue;																																			testModeFloaterBase.(helperTarget) := testModeFloaterBase.(helperTarget) + boxIndex;																end;															else																begin																	testModeFloaterBase.(target) := testModeFloaterBase.(target) - boxValue;																																		testModeFloaterBase.(helperTarget) := testModeFloaterBase.(helperTarget) - boxIndex;																	if testModeFloaterBase.(helperTarget) = 0 then																		testModeFloaterBase.(target) := nil;																end;														end,							viewSetupFormScript:	func()														begin															if testModeFloaterBase.(target) then																viewValue := (band( testModeFloaterBase.(target), boxValue ) = boxValue);																															if viewValue then																testModeFloaterBase.(helperTarget) := testModeFloaterBase.(helperTarget) + boxIndex;																															inherited:?viewSetupFormScript();														end,						});DefineGlobalConstant( 'kBinaryGenerationTemplate,		{				title:			"Binary Generation",				height:			75,				width:			170,				children:							[						{							_proto:					kCheckboxTemplate,							text:						"Send from a virtual binary object",							viewBounds:				SetBounds( 10, 25, 170, 41 ),							target:					[pathExpr: 'outputInformation, 'useVBO],						},						{							_proto:					kNumericInputLineTemplate,							label:					"Byte Count",							viewBounds:				SetBounds( 0, 50, 170, 75 ),							target:					[pathExpr: 'outputInformation, 'size],						},					],		} );DefineGlobalConstant( 'kStringGenerationTemplate,		{				title:			"String Generation",				height:			50,				width:			170,				children:							[						{							_proto:					kNumericInputLineTemplate,							label:					"String Length",							viewBounds:				SetBounds( 0, 25, 170, 50 ),							target:					[pathExpr: 'outputInformation, 'size],						},					],		} );		DefineGlobalConstant( 'kFrameGenerationTemplate,		{				title:			"Frame Generation",				height:			50,				width:			170,				children:							[						{							_proto:					kNumericInputLineTemplate,							label:					"Numer of Slots",							viewBounds:				SetBounds( 0, 25, 170, 50 ),							target:					[pathExpr: 'outputInformation, 'size],						},					],		} );		DefineGlobalConstant( 'kNumberGenerationTemplate,		{				title:			"Number Generation",				height:			50,				width:			170,				children:							[						{							_proto:					kNumericInputLineTemplate,							label:					"How Many",							viewBounds:				SetBounds( 0, 25, 170, 50 ),							target:					[pathExpr: 'outputInformation, 'size],						},					],		} );		DefineGlobalConstant( 'kBytesGenerationTemplate,		{				title:			"Bytes Generation",				height:			50,				width:			170,				children:							[						{							_proto:					kNumericInputLineTemplate,							label:					"Byte Count",							viewBounds:				SetBounds( 0, 25, 170, 50 ),							target:					[pathExpr: 'outputInformation, 'size],						},					],		} );		DefineGlobalConstant( 'kSendChunkTemplate,		{				title:			"Target Settings",				height:			85,				width:			150,				children:					[						{							_proto:					kNumericInputLineTemplate,							label:					"Offset",							viewBounds:				SetBounds( 0, 30, 150, 55 ),							target:					[pathExpr: 'outputInformation, 'spec, 'target, 'offset],						},						{							_proto:					kNumericInputLineTemplate,							label:					"Chunk Size",							viewBounds:				SetBounds(  0, 60, 150, 85 ),							target:					[pathExpr: 'outputInformation, 'spec, 'target, 'length],						},					],		} );		DefineGlobalConstant( 'kSendFlagsTemplate,		{				title:			"Send Flags",				height:			81,				width:			150,				children:					[						{							_proto:					kFlagsCheckboxTemplate,							text:						"kPacket",							viewBounds:				SetBounds( 10, 25, 100, 41 ),							boxValue:				kPacket,							boxIndex:				1,							target:					[pathExpr: 'outputInformation, 'spec, 'sendFlags],							helperTarget:			[pathExpr: 'outputInformation, 'flagsTemp]						},						{							_proto:					kFlagsCheckboxTemplate,							text:						"kMore",							viewBounds:				SetBounds( 10, 45, 100, 61 ),							boxValue:				kMore,							boxIndex:				2,							target:					[pathExpr: 'outputInformation, 'spec, 'sendFlags],							helperTarget:			[pathExpr: 'outputInformation, 'flagsTemp]						},						{							_proto:					kFlagsCheckboxTemplate,							text:						"kEOP",							viewBounds:				SetBounds( 10, 65, 100, 81 ),							boxValue:				kEOP,							boxIndex:				3,							target:					[pathExpr: 'outputInformation, 'spec, 'sendFlags],							helperTarget:			[pathExpr: 'outputInformation, 'flagsTemp],						},					],		} );