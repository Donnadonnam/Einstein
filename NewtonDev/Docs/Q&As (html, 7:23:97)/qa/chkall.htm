<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: A CheckAll Button for NewtApp Overviews</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>A CheckAll Button for NewtApp Overviews</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>A CheckAll Button for NewtApp Overviews  (3/4/97)</H3><DL><DD>Q:    What do I have to do to get the Check All button to appear in my overview? What's the compatible way to do this so that the application works on Newton 2.0 OS  as well?<BR><BR>A:    In Newton  2.1 OS, there is a proto called <CODE>newtCheckAllButton</CODE> (<CODE>@872</CODE>) which you can use.  This proto sends the <CODE>CheckAll</CODE> method to the layout.  In Newton 2.1  OS, <CODE>newtOverLayouts</CODE> have two new methods, <CODE>CheckAll</CODE> and <CODE>UncheckAll,</CODE> which implement this behavior.  However, none of this is present in Newton 2.0 OS .<BR><BR>    To create a check all button that works on the Newton 2.0 OS, you will need to create the button yourself and implement the <CODE>CheckAll</CODE> and <CODE>UncheckAll</CODE> methods for your overview layout (or any other layout you wish to implement check all for.)<BR><BR>    Older versions of the DTS sample code (either "Checkbook-7" or "WhoOwesWhom-3") do have a <CODE>protoCheckAllButton</CODE>.  These samples implement an earlier (and less useful) flavor of Check All.  The old samples check all the items which are currently visible in the overview, while the Newton 2.1 OS checks all the items that are present in the currently selected folder/card filter.  "Checkbook" (version 8 or later) or "WhoOwesWhom" (version 3 or later) will reflect the Newton 2.1 behavior.<BR><BR>    Until the updated samples are available, start with the <CODE>protoCheckAllButton</CODE> from the older sample code, since that gives the correct look and button bounds, and modify it as follows:<BR><BR>    The check all button's <CODE>buttonClickScript</CODE> should look something like this:<BR><CODE><PRE>   func()        if newtAppBase.currentLayout = 'overView then            begin                if layout.checkAllPrimed then                    layout:UnCheckAll()                else                    layout:CheckAll();                layout.checkAllPrimed := NOT layout.checkAllPrimed;            end;</PRE><BR></CODE><BR>    The overview layout's CheckAll and UncheckAll methods should look something like this:<BR><BR><CODE><PRE>    CheckAll:        func()            begin                local curse := dataCursor:Clone();                curse:Reset();                hilitedIndex := nil;                selected := MapCursor(curse, func(e) MakeEntryAlias(e));                AddUndoSend(layout, 'UnCheckAll, []);                layout:DoRetarget();            end;    UncheckAll:        func()            begin                hilitedIndex := nil;                selected := nil;                layout:DoRetarget();            end</PRE><BR></CODE><BR>    Note that these methods make use of two undocumented slots: <CODE>hilitedIndex</CODE> and <CODE>selected</CODE>.  <CODE>hilitedIndex</CODE> is used internally by <CODE>newtOverLayout</CODE> to track the tapped item.  You may set it to <CODE>NIL</CODE> (as above) to clear the value, but do not set it to some other value or rely on its current value.  <CODE>selected</CODE> contains an array of aliases to soup entries representing the currently selected items, and will be used by the routing and filing buttons for processing entries.  It is important to clear <CODE>hilitedIndex</CODE> when modifying the <CODE>selected</CODE> array in any way.<BR><BR>    The resulting CheckAll button should be included in the <CODE>menuRightButtons</CODE> array for the status bar.  The older sample code puts it on the left, however  user interface discussions as part of the Newton 2.1 OS effort resulted in the decision to place the button on the right.<BR></DL>