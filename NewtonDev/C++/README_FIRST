Getting the C++ Installation Up-And-RunningFirst you need to download Macintosh Programmer's Workshop (MPW), whichdoes NOT come with this distribution.  You can get the latest version ofMPW at	ftp://ftp.apple.com/developer/Tool_Chest/Core_Mac_OS_Tools/MPW_etc./MPW-GM_Images/MPW-GM.img.binIf you don't have any better place to put MPW, we suggest sticking itright in the NewtonDev folder.  Once you have unpacked MPW, you'll need toput some things in various places.  Add the items in the "C++:For MPW"folder to the appropriate places in MPW as instructed. Next , you'll need to put the "C++:NCT_Projects" folder somewhere. Keeping it where it is (in C++:NCT_Projects) is reasonable.  TheNCT_Projects folder is where you'll stick your C++ projects, so find aconvenient location for you.When you first launch the MPW Shell, it will complain that it doesn't knowwhere the root projects directory is to be located.  You fix this bytelling MPW Shell where NCT_Projects is, by choosing "Select RootDirectory" under the "NCTSetup" menu.You know things are hunky-dory when the NCTSelect menu gets much longer,and four submenus appear at the bottom (Demos_NCT, Lantern_DDK, PCMCIA_DDK,and Printer_DDK).Once this is done, you can create your own _NCT or _DDK folder for yourdevelopment.  Just use the Newton C++ Menu for that.  _NCT is for anyproject meant to be native functions called from NewtonScript.  _DDK isfor any driver project.  In fact, the suffix (_NCT and _DDK) determinesthe template used to create the FilesInBuild file for your project.  Tocreate a project, just select 'Create New Project…', give it a name andchoose your _NCT or your _DDK folder. You normally shouldn't mix NCT(Includes and Libraries) and DDK (DDKIncludes and DDKLibraries) projects,so normally, you only have access to 376 functions from NCT projectsand you don't have access to NewtonScript basic functions from DDKprojects. Cf the Gestalt sample for how to mix both suites.If you move the NCT_Projects folder, you can always update the NCT menuagain.In the Demos_NCT folder, you'll find Apple's original Demos sample code.You'll also find Gestalt, Paul Guoyt's example code for using the moreadvanced NewtonOS Public APIs.  The standard set in the C++ documentationisn't everything, and Paul's code shows how to really hack the system. BTW, the Printer DDK example originally didn't compile because the foldersPSS and Bootstrap were missing (with the headers in them) in NCT and theDDKs. This has been fixed. There was also bugs in two files (OptionArray.hand SystemEvents.h). There may be additionnal (unfixed) bugs.The two low-level debuggers (Hammer and Newtsbug) require Debugger Images.You'll find them on UNNA at:http://www.unna.org/unna/development/Debugger_Images/