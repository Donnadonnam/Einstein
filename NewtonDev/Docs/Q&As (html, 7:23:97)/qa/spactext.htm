<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Leave Extra Space for Text When Printing</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Leave Extra Space for Text When Printing</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B>NEW: </B>Leave Extra Space for Text When Printing  (5/7/97)</H3><DL><DD>Q:    I use text height/width functions to determine the exact size to make text for printing/faxing , but sometimes text still gets clipped. What's wrong?<BR><BR>A:    Text height/width functions are guaranteed to be accurate only for on-screen use, and so the text may not actually fit in the bounds box you created for the text. This is true whether you draw the text using text shapes or try to create views  of "minimal" size for the text. The exact bounds will usually be close to the bounds returned by functions like <CODE>TextBounds</CODE> and <CODE>StrFontWidth</CODE>, but those values may be too small to fit.<BR><BR>    Some of this problem is due to inherent ambiguities in PostScript font substitution (for PostScript-based Apple LaserWriters.) Some of this problem is due to ROM problems in font scaling for raster/bitmap printers (including fax) at resolutions that are not 72 DPI.<BR><BR>    To work around this problem, be as liberal as possible when designing the bounds for your text, using view justification as appropriate. <BR><BR>    If you do not need a frame around your text or special calculations about text size, we recommend making your view or text shape as large as possible. For instance, a centered page number at the bottom of the page could be a text view that is justified with "parent full horizontal" justification with centered text. Or, it could be a text shape that is very large (as wide as the page -- use <CODE>:LocalBox()</CODE> to find out) and use center justification in a style frame passed to <CODE>:DrawShape(...)</CODE>.<BR><BR>    If you wanted a frame or border around your text, or have some other reason for wanting to know the exact size, use the font width/height functions and then add some space  to the text bounds. As a guideline, adding 6% to the width/height when printing should be enough space to account for these problems. We recommend you experiment with different printers and page sizes (in the Locale preferences) to ensure that the "extra space" is enough for your text items.<BR><BR>    Note: there is an unrelated text printing bug in the MessagePad 2000 and eMate 300 devices that in some circumstances will clip parts or entire characters, occasionally preventing small text strings from printing entirely. As of 7/16/97, this bug  is fixed for the MessagePad 2000 in System Update "MessagePad 2000 2.1 (717041)US", but is not yet fixed on the eMate 300.</DL>