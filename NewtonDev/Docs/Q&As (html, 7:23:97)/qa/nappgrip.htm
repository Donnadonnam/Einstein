<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: How to Avoid NewtApp "Please Insert the Card" Errors</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>How to Avoid NewtApp "Please Insert the Card" Errors</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>How to Avoid NewtApp "Please Insert the Card" Errors  (5/10/96)</H3><DL><DD>Q:    If a NewtApp-based application is on a PC card and the card is removed, the user gets the following error message:<BR><BR>    "The package &lt;package name&gt; still needs the card you removed.  Please insert it now, or information on the card may be damaged."<BR><BR>    How can I avoid this problem?<BR><BR>A:    While a card is unmounting, if an object on the card is still referenced, then the user will get the above error message asking them to reinsert the  card.  For more information about issues for applications running from a PC card see the article "The Newton Still Needs the Card You Removed"<BR><BR>    The <CODE>newtApplication </CODE>method <CODE>NewtInstallScript </CODE>is normally called in the part's <CODE>InstallScript</CODE> function.  One thing the <CODE>NewtInstallScript </CODE>does is register the viewDefs in the NewtApp base view <CODE>allViewDefs</CODE> slot using the global function <CODE>RegisterViewDef</CODE>.  <BR><BR>    Currently, <CODE>RegisterViewDef </CODE>requires that the data definition symbol be internal.  If the symbol is on the card, then when the <CODE>NewtRemoveScript </CODE>tries to unregister the viewDef a reference to data on the card is encountered and the above error message will be shown.  This bug will be fixed in a future ROM.  <BR><BR>    To work around this bug for any 2.0 based ROM, add the following code to your part's <CODE>InstallScript </CODE>before calling <CODE>NewtInstallScript</CODE>:<BR>        <BR><CODE><PRE>    local mainLayout := partFrame.theForm;    if mainLayout.allViewDefs then        foreach dataDefSym,viewDefsFrame in mainLayout.allViewDefs do            foreach viewDef in viewDefsFrame do                RegisterViewDef (                     viewDef, EnsureInternal (dataDefSym) );    partFrame.removeFrame :=         mainLayout:NewtInstallScript(mainLayout);</PRE><BR></CODE>    Note that it is OK to call <CODE>RegisterViewDef </CODE>more than once with the same view definition.  <CODE>RegisterViewDef </CODE>will do nothing (and return NIL) if the template is already registered.</DL>