<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Symbol Hacking</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Symbol Hacking</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Symbol Hacking  (11/11/93)</H3><DL><DD>Q:    I would like to be able to build frames dynamically and have my application create the name of the slot in the frame dynamically as well.  For instance, something like this:<BR><CODE><PRE>MyFrame:= {}; theSlotName := "Slot_1";</PRE><BR></CODE>    <BR>    At this point is there a way to then create the following?...  <CODE>MyFrame.Slot_1<BR></CODE><BR>A:    The function <CODE>Intern</CODE> takes a string and returns a symbol. There is also a mechanism called path expressions (see the NewtonScript Reference), that allows you to specify an expression or variable to evaluate, in order to get the slot name. You can use these things to access the slots you want:<BR><BR><CODE><PRE>    MyFrame := {x: 4};    theXSlotString := "x" ;    MyFrame.(Intern(theXSlotString)) := 6     theSlotName := "Slot_1";    MyFrame.(Intern(theSlotName)) := 7;    // myFrame is now {x: 6, Slot_1: 7}</CODE></PRE></DL>