#	File:		CheckWindowOut##	Contains:	script to check a window out for modification##	Usage:		CheckWindowOut window##	Status:		CheckWindowOut may return the following status values:##					0		the window was checked out#					1		error#					2		the user canceled##				CheckWindowOut uses the ProjectInfo command to determine the#				parent project for a file open as a window. Once this project#				has been determined, the file can be properly checked out.#				A dialog allows the user to type in a short comment that#				indicates what the reason for checking the file out was.#				This will be logged into the project, and into the file.##	Written by:	##	Copyright:	© 1988-1990, 1992-1995 by Apple Computer, Inc., all rights reserved.##	Change History (maintain by hand, CheckWindowOut confuses itself by editing itself)### NOTE:  This NCT build script was created from the 5/6/94 version of the internal#        build scriptSet Exit 0Set NCTredirect "·"# the following helps to debug until MPW sends echos to Dev:Console instead of Dev:StdErrIf {Echo}	Set NCTsomewhere "{NCTredirect}{NCTredirect} '{{Worksheet}}'"Else	Set NCTsomewhere "{NCTredirect} Dev:Null"EndSet NCTAlertCmd AlertBegin	Set NCTCommentFile "{{TempFolder}}NCTCheckWindowOutComment"	# file to compose comment in	Set NCTTempCommentFile "{{TempFolder}}NCTTempCheckWindowOutComment"	Set NCTCheckOutErrorsFile "{{TempFolder}}NCTCheckOutErrors"	If "{{1}}" == "-comment"		Set NCTDefaultComment "{{2}}"		Shift 2		Set NCTCommentMode "comment"	Else If "{{1}}" == "-nocomment"		Shift 1		Set NCTCommentMode "nocomment"	Else		Set NCTCommentMode "ask"		If "{{NCTDefaultComment}}" == "" && "`Exists "{{NCTCommentFile}}"`" ­ ""			Set NCTDefaultComment "``Catenate "{{NCTCommentFile}}"``"		End	End	Set NCTWindow `Files -f "{{1}}"`	# get short name of window	If "{{NCTWindow}}" !~ /:*([Â:]+:*)*([Â:]+)¨1/		{NCTAlertCmd} "CanÕt parse window parameter." ; Exit 1	End	Set NCTShort "{{¨1}}"					# get short name for dialogs	Set NCTCant "Ò{{NCTShort}}Ó canÕt be checked out"		Set NCTInfo "``ProjectInfo "{{NCTWindow}}"``"	If "{{NCTInfo}}" !~ /ÅProject: (Åº)¨1     Checked out:Å/		{NCTAlertCmd} "{{NCTCant}} because it doesnÕt belong to a project." ; Exit 1	End	Set NCTProject "{{¨1}}"	# check if the window is already checked out	If "{{NCTInfo}}" =~ /[Â,]+,[Â ¶t]+¶+Å/		Confirm "{{NCTCant}} again because itÕs already checked out for modification. Do you want to check it in?"		Exit "{Status}" If "{Status}"		NCTCheckWindowIn "{{NCTWindow}}"		Exit "{{Status}}"	End	# check if the window is ModifyReadOnly'd	If "{{NCTInfo}}" =~ /[Â,]+,[Â ¶t]+¶*Å/		Confirm "{{NCTCant}} because itÕs a modified read-only copy. Do you want to check it in?"		Exit "{Status}" If "{Status}"		NCTCheckWindowIn {{"Parameters"}}		Exit "{{Status}}"	End	# get the version that is checked out	If "{{NCTInfo}}" !~ /[Â,]+,([0-9]+)¨1Å/		{NCTAlertCmd} "CanÕt parse ProjectInfo Ò{{NCTInfo}}Ó." ; Exit 1	End	Set NCTOldVersion "{{¨1}}"	# check if the project is mounted	If "``Echo -n "º "; MountProject -s -pp -r``" !~ /Åº¶'Ç0,1È ¶'Ç0,1È"{{NCTProject}}"¶'Ç0,1ÈÅ/ ; ¶			{NCTAlertCmd} "{{NCTCant}} because the project Ò{{NCTProject}}Ó is not mounted." ; Exit 1	End	# see if the file is already checked out	Set NCTInfo "``ProjectInfo -latest -comments -project "{{NCTProject}}" "{{NCTShort}}"``"	If "{{NCTInfo}}" == ""		{NCTAlertCmd} "{{NCTCant}} because it isnÕt really in the project Ò{{NCTProject}}Ó." ; Exit 1	Else If "{{NCTInfo}}" =~ /ÅOwner: ([Â:]+)¨1     Checked out:ÅComment: +(Å)¨2/		Set NCTOwner "{{¨1}}"		Set NCTComment "{{¨2}}"		If "{{NCTOwner}}" == "{{User}}"			{NCTAlertCmd} "{{NCTCant}} because you have already checked it out elsewhere.  Comment: Ò{{NCTComment}}Ó" ; Exit 1		Else			{NCTAlertCmd} "{{NCTCant}} because it has already been checked out by {{NCTOwner}}.  Comment: Ò{{NCTComment}}Ó" ; Exit 1		End	Else If "{{NCTInfo}}" =~ /[Â,]+,([0-9]+)¨1((' (OBSOLETE)')Ç0,1È)¨2ÅAuthor: (Å)¨3     ÅChecked in:ÅComment: +(Å)¨4/		If "{{¨2}}" ­ ""			{NCTAlertCmd} "{{NCTCant}} because it is obsolete." ; Exit 1		End		Set NCTlatestVersion "{{¨1}}"		Set NCTOwner "{{¨3}}"		Set NCTComment "{{¨4}}"	Else		{NCTAlertCmd} "CanÕt parse ProjectInfo Ò{{NCTInfo}}Ó." ; Exit 1	End	Set NCTIncrement `Evaluate {{NCTlatestVersion}} - {{NCTOldVersion}}`	If {{NCTIncrement}} > 0		If {{NCTIncrement}} == 1			Set NCTversions "version"		Else			Set NCTversions "versions"		End		Confirm "Ò{{NCThort}}Ó is {{NCTIncrement}} {{NCTversions}} newer than your old copy:  {{NCTOwner}}:  Ò{{NCTComment}}Ó  Do you still want to check it out?"		Exit {Status} If {Status} ­ 0	End	# get a comment about the change	If "{{NCTCommentMode}}" == "ask"		Set Exit 0		Set IgnoreCmdPeriod 1		Echo -n "{{NCTDefaultComment}}" | CoolRequest -t -d -q "What are you are going to change in Ò{{NCTShort}}Ó?" >"{{NCTTempCommentFile}}"		Set NCTCommentStatus {Status}		Set IgnoreCmdPeriod 0		If {NCTCommentStatus}			Delete -i "{{NCTTempCommentFile}}" ; Exit {NCTCommentStatus}		Else			Rename -y "{{NCTTempCommentFile}}" "{{NCTCommentFile}}"		End	Else		Echo -n "{{NCTDefaultComment}}" > "{{NCTCommentFile}}"	End	# check the file out	CheckOut -cf "{{NCTCommentFile}}" -m -project "{{NCTProject}}" "{{NCTWindow}}" · "{{NCTCheckOutErrorsFile}}"	Set NCTCheckOutStatus {Status}	If {NCTCheckOutStatus}		{NCTAlertCmd} "{{NCTCant}}:  `Catenate "{{NCTCheckOutErrorsFile}}"`" ; Exit 1	End	Delete -i "{{NCTCheckOutErrorsFile}}"	If {NCTProjectHeaders}		If "`Files -n -i -x t "{{NCTWindow}}"`" =~ /Å(????)¨1/			Set NCTCloseWhenDone 0			MoveWindow "{{NCTWindow}}" · Dev:Null || Set NCTCloseWhenDone 1			If {NCTCloseWhenDone} ; Open "{{NCTWindow}}" ; End			# add the comment to the change history			Set NCTInfo "`ProjectInfo -s "{{NCTWindow}}"`"			If "{{NCTInfo}}" !~ /[Â,]+,([0-9]+)¨1Å/				{NCTAlertCmd} "CanÕt parse ProjectInfo Ò{{NCTInfo}}Ó." ; Exit 1			End			Mark -y ¤ NCTOldSelection "{{NCTWindow}}"				AddChange "{{NCTWindow}}" "{{¨1}}+" "{{NCTCommentFile}}"			Find NCTOldSelection "{{NCTWindow}}"			Unmark NCTOldSelection "{{NCTWindow}}"			Save "{{NCTWindow}}"		Else			{NCTAlertCmd} "CanÕt parse Files output." ; Exit 1		End		If {NCTCloseWhenDone} ; Close "{{NCTWindow}}" ; End	EndEnd {NCTsomewhere}