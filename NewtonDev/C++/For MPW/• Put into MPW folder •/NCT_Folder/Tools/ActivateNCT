##	File:		ActivateNCT##	Written by:	John A.##	Copyright:	© 1995-96 by Apple Computer, Inc., all rights reserved.##   03/12/96	joa		Add NCTSearchMenuInstalled one-shot variable#						so that NCTSearchMenuInstall is only called during MPW startup## Don't exit out of this script because of an error#Set savedExit		"{Exit}";	Set Exit 0Set savedActive		"{Active}"if {TraceFailures} ; Echo "## Beginning ActivateNCT script" ; end## verify these incase someone copys NCT and just invokes this script# without running it from UserStartup¥NewtonC++Toolsif "{NCTFolder}" == ""	Set NCTFolder		"{MPW}NCT_Folder:";				Export NCTFolder	Set NCTScratch		"{NCTFolder}Scratch:";			Export NCTScratch	Set NCTTools		"{NCTFolder}Tools:";			Export NCTToolsendSet NCTMenuName		"Newton C++ Tools"	;			Export NCTMenuNameUnset NCTSourcesAlias failbeep 'beep -2g -2c'## Set up the NCTSources variable#If "`Exists "{NCTScratch}SetNCTProjectsScript"`"	Execute "{NCTScratch}SetNCTProjectsScript"End## Check to see if we have a source directory variable set#If "{NCTSources}" == ""	DeleteMenu NCTSetup ³³ dev:null	Alert -s "NOTE: The Newton C++ Tools build system must have a root directory selected. Please set this from the NCTSetup menu."	AddMenu NCTSetup "Select Root Directory"		'Execute "{NCTTools}SetNCTProjects" ·· "{WorkSheet}"'	Exit 0EndIf "`Exists "{NCTSources}"`" == ""	DeleteMenu NCTSetup ³³ dev:null	Alert -s "NOTE: The current NCT projects directory ¶"{NCTSources}¶" does not exist. Activate NCT from the NCTSetup menu when this directory is mounted."	AddMenu NCTSetup "Initialize NCT" 					'Execute "{NCTTools}ActivateNCT" ·· "{WorkSheet}"'	AddMenu NCTSetup "Select Root Directory" 		'Execute "{NCTTools}SetNCTProjects"  ·· "{WorkSheet}"'	Exit 0End## Set up all of the NCT variables#Execute "{NCTTools}DefineNCTVariables"If !"`Exists "{NCTBuildResults-dir}"`" 	NewFolder "{NCTBuildResults-dir}" ·· Dev:NullEnd## Check to see if user has set up their prefs set#If "`Exists "{MPW}NCTBuild¥UserPrefs"`"	Execute "{MPW}NCTBuild¥UserPrefs"EndIf !"{NCTPrefsValid}"	DeleteMenu 'NCTSetup' ³³ dev:null	DeleteMenu "{NCTMenuName}" ³³ dev:null	AddMenu 'NCTSetup' "Activate NCT" 'Execute "{NCTTools}ActivateNCT" ·· "{WorkSheet}"'	Open "{MPW}NCTBuild¥UserPrefs"  ·· dev:null	Open "{Worksheet}"  ·· dev:null		Find ° "{Worksheet}" 	Echo   "#### You must edit the variables in file ¶"{MPW}NCTBuild¥UserPrefs¶" before you can continue." 	Echo   "#### Make the appropriate changes and then select Activate NCT from the NCTSetup menu." 	Exit 0End	Set savedDirectory "`directory -q`"Directory "{NCTSources}" ·· dev:null # a place to check on stuff here if needed	If "{DoIt}" == ""		Set DoIt "DoIt" ; Export DoIt	EndAlias _SetNCTRedirection ¶	'If "{NCTBuildResultsFile}" ; ¶		Open -n "{NCTBuildResultsFile}" ; ¶		SaveOnClose -n "{NCTBuildResultsFile}" ; ¶		Set NCTredirection "·· ¶"{NCTBuildResultsFile}¶"" ; ¶	Else If "{DontSendNCTBuildResultsToWorksheet}" ­ "" ; ¶		Open "{Worksheet}" ; ¶		Set NCTredirection "·· ¶"{Worksheet}¶"" ; ¶	Else ; ¶		Set NCTredirection "" ; ¶	End'##	Install Search menus##If "{InstallSearchMenu}" != "0"#	"BuildNCTSearchMenu"#End## Locate all the project folders in the NCTSource directory## save the old list of menu's before scanning for the current setSet NCT_OldMenusList "" ; export NCT_OldMenusListif "{{NCT_ProjectsList}}" ­ ""	Set NCT_OldMenusList "{{NCT_ProjectsList}}"endSet NCT_TempList "``Files -d ``"Set NCT_ProjectsList ""IF "{{NCT_TempList}}" ­ ""	For _aDircty In {NCT_TempList}			if `Evaluate "{_aDircty}" =~ /:(Å_NCT)¨1:/`			Set NCT_ProjectsList "{{NCT_ProjectsList}}¶"{¨1}¶" "		end			if `Evaluate "{_aDircty}" =~ /:(Å_DDK)¨1:/`			Set NCT_ProjectsList "{{NCT_ProjectsList}}¶"{¨1}¶" "		end	#   if you want NCT to "recognize" project folders using other pattern(s)	#   copy the three lines above and change the regular expression per your needs	#   Ref: Introduction to MPW, Chapter 6, "Writing Selection Expression that Contain Patterns"			End 		Unset ¨1ENDExport NCT_ProjectsList# Now go looking for Hammer Images to make a menu ofSet NCT_ROMImagesList ""If "`Exists -d "{NCTSources}Debugger_Images:" `" ­ ""	Set NCT_ROMImages-dir "{NCTSources}Debugger_Images:"	Set NCT_TempList "``Files -t 'aif ' -c 'NwSB' "{NCT_ROMImages-dir}"``"	if "{{NCT_TempList}}" ­ ""		For _aFile in {NCT_TempList}			Set NCT_ROMImagesList "{{NCT_ROMImagesList}} ¶"{_aFile}¶""		End # For	endEndExport NCT_ROMImagesListif "`Exists "{NCTTools}NCTBuildRex"`" 	# Go see if any .config files can be found		Set NCT_configDirList ""		if "{{NCT_ProjectsList}}" ­ ""		For _aDircty In {NCT_ProjectsList}			Set NCT_TempList "``Files -t TEXT "{NCTSources}{_aDircty}:"``"			if "{{NCT_TempList}}" ­ ""				for _aFile in {NCT_TempList}					If `Evaluate "{_aFile}" =~ /Å.config/`						Set NCT_REXconfigDirList "{{NCT_configDirList}}¶"{_aDircty}¶" "					end				end # for _aFile			end		End # For _aDircty	end		Export NCT_configDirListend##	Install NCT menus using NCT_ProjectsList#"{NCTTools}NCTMenuInstall"Directory "{savedDirectory}" || (echo "## Unable to restore directory in ActivateNCT" ; exit 2)##	Install NCT Search using NCTSearchMenuName (if any else use "Find")#IF "{NCTSearchMenuInstalled}" == ""	if "`Exists "{NCTTools}NCTSearchMenuInstall"`" ­ ""	"{NCTTools}NCTSearchMenuInstall"	end	Set NCTSearchMenuInstalled 1 ; export NCTSearchMenuInstalledENDif "{NCTProjectMenuInstalled}" == ""	if "`Exists "{NCTTools}NCTProjectMenuAddons"`" ­ ""		"{NCTTools}NCTProjectMenuAddons"# make this a oneshot so the "Reinitialize NCT System" Menu Item doesn't do this again# user can always invoke the NCTProjectMenuAddons script directly if needed for some reason		Set NCTProjectMenuInstalled 1 ; export NCTProjectMenuInstalled	endend## Since this script is Execute'd from MPW Shell level clear out any temporary variables we used# but don't need to keep Unset savedDirectoryUnset _aFileUnset _aDirctyUnset NCT_TempList## Go to the window that was set before we switched to the worksheet#if "{savedActive}" ­ ""	Open "{savedActive}" ·· dev:nullendSet Exit "{savedExit}"