<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Limitations of GrayShrink</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Limitations of GrayShrink</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Limitations of GrayShrink  (3/4/97)</H3><DL><DD>Q:    Why isn't <CODE>GrayShrink</CODE> doing what I want it to when I use it with relatively small bitmaps?<BR><BR>A:    <CODE>GrayShrink</CODE> was designed for rendering relatively large images such as received faxes into a moderately large part of a Newton display.  It works by setting a flag in the bitmap that tells the imager to gather multiple bits from the source bitmap and turn them into a single gray pixel when drawing through a reducing transform. <BR><BR>    If passed a bitmap that is more than one bit deep, the shrinking algorithm is not appropriate and so <CODE>GrayShrink</CODE> will not modify the bitmap.   The end result will be a transformed (shrunk) image with the same bit depth as the original.  That is, the shrinking will still happen, but the graying won't.<BR><BR>    <CODE>GrayShrink</CODE> will not work with read-only bitmaps (it is unable to set the flag.)  The result will still be a transformed (shrunk) image, but pixels will not be combined to gray.   There is no way to clear the flag once it has been set.  After <CODE>GrayShrink</CODE> has modified a bitmap, drawing it to the screen through any scaling transform that reduces the image will produce a pixel combined gray result.<BR><BR>    The <CODE>GrayShrink</CODE> pixel gathering algorithm produces an anomaly along the righthand side of the reduced image.  When rendering large bitmaps into a reasonably large destination, this is generally uunnoticeable.  However, when used with small source bitmaps or when rendering into a small area, several columns along the right side of the result may not be drawn, and the anomaly is easily seen.  We recommend using <CODE>GrayShrink</CODE> and the <CODE>'drawGrayScaled </CODE>setting for <CODE>protoImageView</CODE> only for large source images such as incoming faxes or scanned data.</DL>