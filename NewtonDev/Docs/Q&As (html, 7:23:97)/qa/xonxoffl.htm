<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: XOn/XOff Software Flow Control Options</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>XOn/XOff Software Flow Control Options</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>XOn/XOff Software Flow Control Options  (4/3/97)</H3><DL><DD>Q:    XOn/XOff software flow control isn't working.  What could I be doing wrong?<BR><BR>A:    A quirk in the way Unicode characters are packed into <CODE>'char</CODE> fields in the endpoint option is preventing the correct flow control characters from being set in the serial driver.  The solution is to use the <CODE>'byte</CODE> symbol rather than the <CODE>'char</CODE> symbol for these fields, thus avoiding the Unicode-to-ASCII conversion that would normally take place.  The Newton Programmer's Guide is incorrect; the correct option frames are as follows:<BR><BR><CODE><PRE>{ label:    kCMOInputFlowControlParms,  type:     'option,  opCode:   opSetRequired,  result:   nil,  form:     'template,  data: {    arglist:  [      unicodeDC1,           // xonChar        unicodeDC3,           // xoffChar       true,                 // useSoftFlowControl       nil,                  // useHardFlowControl       0,                    // not needed; returned       0,  ],                // not needed; returned     typelist: ['struct,      'byte,                // XON character      'byte,                // XOFF character      'boolean,             // software flow control      'boolean,             // hardware flow control      'boolean,             // hardware flow blocked      'boolean, ],  },  },  // software flow blocked{ label:    kCMOOutputFlowControlParms,  type:     'option,  opCode:   opSetRequired,  result:   nil,  form:     'template,  data: {    arglist:  [      unicodeDC1,           // xonChar        unicodeDC3,           // xoffChar       true,                 // useSoftFlowControl       nil,                  // useHardFlowControl       0,                    // not needed; returned       0,  ],                // not needed; returned     typelist: ['struct,      'byte,                // XON character      'byte,                // XOFF character      'boolean,             // software flow control      'boolean,             // hardware flow control      'boolean,             // hardware flow blocked      'boolean, ],  },  },  // software flow blocked</CODE></PRE></DL>