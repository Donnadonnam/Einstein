/***      Newton Developer Technical Support Sample Code****      by Ryan Robertson, Newton Developer Technical Support****      Copyright © 1997 by Apple Computer, Inc.  All rights reserved.****      You may incorporate this sample code into your applications without**      restriction.  This sample code has been provided "AS IS" and the**      responsibility for its operation is 100% yours.  You are not**      permitted to modify and redistribute the source as "DTS Sample Code."**      If you are going to re-distribute the source, we require that you**      make it clear in the source that the code was descended from**      Apple-provided sample code, but that you've made changes.*//*	Changes for d8:*//********************************************************************//*								Package Constants									  *//********************************************************************/ constant kVersionString 					:= "1.1d7 ©1997";constant kAboutString 						:= kVersionString && "\nBy Ryan Robertson, DTS Comms Geek";constant kTestMinAppSize					:= nil;constant kTestMaxAppSize					:= nil;constant kMinWidth 							:= 180;constant kMinHeight 							:= 90;constant kMaxWidth 							:= 220;constant kMaxHeight 							:= 110;constant kDefaultInstanceName				:= "^0 Endpoint ^1";constant kCancelButtonString				:= "Cancel";/********************************************************************//*						Profiling Constants										  *//********************************************************************/ constant kProfileFrame 				:= '{startTime: 0, stopTime: 0, timeElapsed: 0, paused: nil, size: 0};/********************************************************************//*								Status Strings										  *//********************************************************************/ constant kConnectingString				:= "Connecting...";constant kListeningString	 			:= "Listening...";constant kDisconnectingString 		:= "Disconnecting...";constant kCancellingString				:= "Cancelling...";constant kSendingString 				:= "Sending...";constant kProcessingCommandString 	:= "Processing...";constant kErrorInOutputString			:= "Sorry, there was an error outputting.";constant kWrongChunkSizeString 		:= "Your chunk size was not a multiple of the objects size.  This is just an informational notify, all the data was sent.";constant kEventHandlerString			:= "Event Handler Data\n^?0\nEvent Code: ^0||^?1\nEvent Data: ^1||^?2\nEvent ServiceID: ^2||^?3\nEvent Time: ^3||";constant kDisconnectingEndpoints		:= "Disconnecting ^0 endpoints...";/********************************************************************//*								AppleTalk Constants								  *//********************************************************************/ constant kAppleTalkToolSymbol				:= '|AppleTalk:DTS|;constant kAppleTalkToolString				:= "AppleTalk";constant kNoAppletalkFilterString 		:= "You must first enter a filter.";constant kChooserButtonString 			:= "a machine";constant kChooserHeaderString 			:= "machine";constant kChooserLookForString 			:= "machines";/********************************************************************//*								Serial Constants									  *//********************************************************************/ constant kSerialToolSymbol					:= '|Serial:DTS|;constant kSerialToolString					:= "Serial";constant kOnSymbol 							:= 'on;constant kOffSymbol 							:= 'off;constant kNeedNumberString 				:= "You must enter a number.";/********************************************************************//*								IrDA Constants										  *//********************************************************************/ constant kIrDAToolSymbol					:= '|IrDA:DTS|;constant kIrDAToolString					:= "IrDA";/********************************************************************//*								IrDA MUX Constants								  *//********************************************************************/ constant kIrDAMUXToolSymbol				:= '|IrDA_MUX:DTS|;constant kIrDAMUXToolString				:= "IrDA MUX";constant kServiceNameString				:= "Service Name";/********************************************************************//*								Modem Constants									  *//********************************************************************/ constant kModemToolSymbol					:= '|Modem:DTS|;constant kModemToolString					:= "Modem";/********************************************************************//*								NIE Constants										  *//********************************************************************/ constant kNIEToolSymbol						:= '|NIE:DTS|;constant kNIEToolString						:= "NIE";constant kTCP 									:= 1;constant kUDP 									:= 2;constant kTCPIPString						:= "TCP/UDP";constant kOpenLinkString					:= "Open NIE Link";constant kCloseLinkString					:= "Close NIE Link";constant kPortRequiredString 				:= "(Required)";constant kPortRequiredForListenString	:= "(Required for listen)";constant kPortDefaultString 				:= "(Default)";constant kDisconnectingLinkString		:= "Disconnecting Link";DefineGlobalConstant( 'kNIEMulticastOptionTemplate,	{		label:			"iumc",		type:				'option,		opCode:			opSetRequired,		result:			nil,		form:				'template,		data:			{				argList: 	[nil, nil, nil, nil],				typeList: 	['struct, 'long, 'long, 'uLong, ['array, 'byte, 4]],			},	} );	DefineGlobalConstant( 'kNIEBroadcastOptionTemplate,	{		label:			"iubc",		type:				'option,		opCode:			opSetRequired,		result:			nil,		form:				'template,		data:			{				argList: 	[nil, nil, nil],				typeList: 	['struct, 'boolean, 'boolean, 'boolean],			},	} );	constant kJoinMulticastGroup				:= 1;constant kLeaveMulticastGroup				:= 2;/********************************************************************//*								Generic Comms Constants							  *//********************************************************************/ constant kBindTimeout 						:= nil;constant kConnectTimeout 					:= nil;constant kAcceptTimeout 					:= nil;DefineGlobalConstant( 'kStringSpecTemplate,					{					form:					'string,					termination: 								{							endCharacter: unicodeCR, 							byteCount: 80,						},					partialFrequency:	200,					filter: 						{							sevenBit: true, 							byteProxy: [{byte: unicodeLF, proxy: nil}, {byte: 0x00, proxy: 0x20}],						},				} );DefineGlobalConstant( 'kEchoSpecTemplate,				{					form:					'bytes,					termination: 								{							byteCount: 80,						},					partialFrequency:	200,				} );				DefineGlobalConstant( 'kAnalyzeSpecTemplate,				{					form:					'bytes,					termination:						{							byteCount: 1024,						},					partialFrequency: 500,				} );