// generated by Fast Light User Interface Designer (fluid) version 1.0400

#include "TFLToolkitUI.h"
#include "Toolkit/TToolkit.h"
#include "app/TFLApp.h"
#include <FL/fl_draw.H>

Fl_Double_Window *wToolkitWindow=(Fl_Double_Window *)0;

Fl_Menu_Bar *wToolkitMenubar=(Fl_Menu_Bar *)0;

static void cb_New(Fl_Menu_*, void*) {
  gToolkit->UserActionNew();
}

static void cb_Open(Fl_Menu_*, void*) {
  gToolkit->UserActionOpen();
}

static void cb_Save(Fl_Menu_*, void*) {
  gToolkit->UserActionSave();
}

static void cb_Save1(Fl_Menu_*, void*) {
  gToolkit->UserActionSaveAs();
}

static void cb_Close(Fl_Menu_*, void*) {
  gToolkit->UserActionClose();
}

static void cb_Quit(Fl_Menu_*, void*) {
  gToolkit->UserActionQuit();
}

static void cb_Undo(Fl_Menu_*, void*) {
  gToolkit->UserActionUndo();
}

static void cb_Redo(Fl_Menu_*, void*) {
  gToolkit->UserActionRedo();
}

static void cb_Cut(Fl_Menu_*, void*) {
  gToolkit->UserActionCut();
}

static void cb_Copy(Fl_Menu_*, void*) {
  gToolkit->UserActionCopy();
}

static void cb_Paste(Fl_Menu_*, void*) {
  gToolkit->UserActionPaste();
}

static void cb_Find(Fl_Menu_*, void*) {
  gToolkit->UserActionFind();
}

static void cb_Hello(Fl_Menu_*, void*) {
  gToolkit->LoadSampleCode(1);
}

static void cb_Build(Fl_Menu_*, void*) {
  gToolkit->UserActionBuild();
}

static void cb_Install(Fl_Menu_*, void*) {
  gToolkit->UserActionInstall();
}

static void cb_Run(Fl_Menu_*, void*) {
  gToolkit->UserActionRun();
}

static void cb_Stop(Fl_Menu_*, void*) {
  gToolkit->UserActionStop();
}

static void cb_Process(Fl_Menu_*, void*) {
  gToolkit->AppInstall();
}

static void cb_Process1(Fl_Menu_*, void*) {
  gToolkit->AppBuild();
gToolkit->AppInstall();
gToolkit->AppRun();
}

static void cb_Project(Fl_Menu_*, void*) {
  gToolkit->AppStop();
}

Fl_Menu_Item menu_wToolkitMenubar[] = {
 {"File", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"New...", FL_COMMAND|0x6e,  (Fl_Callback*)cb_New, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Open...", FL_COMMAND|0x6f,  (Fl_Callback*)cb_Open, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Save", FL_COMMAND|0x73,  (Fl_Callback*)cb_Save, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Save As...", FL_COMMAND|0x10073,  (Fl_Callback*)cb_Save1, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Close", FL_COMMAND|0x77,  (Fl_Callback*)cb_Close, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Page Setup...", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Print...", FL_COMMAND|0x70,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Quit", FL_COMMAND|0x71,  (Fl_Callback*)cb_Quit, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Edit", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Undo", FL_COMMAND|0x7a,  (Fl_Callback*)cb_Undo, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Redo", FL_COMMAND|0x1007a,  (Fl_Callback*)cb_Redo, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Cut", FL_COMMAND|0x78,  (Fl_Callback*)cb_Cut, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Copy", FL_COMMAND|0x63,  (Fl_Callback*)cb_Copy, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Paste", FL_COMMAND|0x76,  (Fl_Callback*)cb_Paste, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Find....", FL_COMMAND|0x66,  (Fl_Callback*)cb_Find, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Project", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"New Project...", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Open Project...", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Decompile Package...", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Sample Projects", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Hello World", 0,  (Fl_Callback*)cb_Hello, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Add File...", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Build", FL_COMMAND|0x62,  (Fl_Callback*)cb_Build, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Install", FL_COMMAND|0x32,  (Fl_Callback*)cb_Install, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Run", FL_COMMAND|0x72,  (Fl_Callback*)cb_Run, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Stop", FL_COMMAND|0x2e,  (Fl_Callback*)cb_Stop, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Process Earlier", FL_COMMAND|0x32,  (Fl_Callback*)cb_Process, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Process Later", FL_COMMAND|0x72,  (Fl_Callback*)cb_Process1, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Project Settings...", FL_COMMAND|0x2e,  (Fl_Callback*)cb_Project, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Help", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Toolkit Manual...", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"About Toolkit...", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Group *wToolkitToolbar=(Fl_Group *)0;

Fl_Button *wToolkitRun=(Fl_Button *)0;

static void cb_wToolkitRun(Fl_Button*, void*) {
  gToolkit->UserActionRun();
}

Fl_Button *wToolkitStop=(Fl_Button *)0;

static void cb_wToolkitStop(Fl_Button*, void*) {
  gToolkit->UserActionStop();
}

TFLTile *wTile=(TFLTile *)0;

TFLScriptPanel *wScriptPanel=(TFLScriptPanel *)0;

TFLTerminalEditor *wToolkitTerminal=(TFLTerminalEditor *)0;

Fl_Double_Window* CreateToolkitWindow(int x, int y) {
  { wToolkitWindow = new Fl_Double_Window(720, 600);
    { Fl_Menu_Bar* o = wToolkitMenubar = new Fl_Menu_Bar(0, 0, 720, 24);
      wToolkitMenubar->color(FL_LIGHT2);
      wToolkitMenubar->menu(menu_wToolkitMenubar);
      o->box(FL_FREE_BOXTYPE);
    } // Fl_Menu_Bar* wToolkitMenubar
    { Fl_Group* o = wToolkitToolbar = new Fl_Group(0, 24, 720, 54);
      wToolkitToolbar->box(FL_THIN_UP_BOX);
      wToolkitToolbar->color(FL_LIGHT2);
      { Fl_Button* o = wToolkitRun = new Fl_Button(10, 25, 36, 36, "@>");
        wToolkitRun->color(FL_LIGHT2);
        wToolkitRun->labelsize(24);
        wToolkitRun->labelcolor((Fl_Color)48);
        wToolkitRun->callback((Fl_Callback*)cb_wToolkitRun);
        wToolkitRun->align(Fl_Align(512|FL_ALIGN_INSIDE));
        o->box(FL_FREE_BOXTYPE);
        o->down_box(FL_FREE_BOXTYPE);
        o->clear_visible_focus();
      } // Fl_Button* wToolkitRun
      { Fl_Button* o = wToolkitStop = new Fl_Button(46, 25, 36, 36, "@square");
        wToolkitStop->color(FL_LIGHT2);
        wToolkitStop->labelsize(16);
        wToolkitStop->labelcolor((Fl_Color)48);
        wToolkitStop->callback((Fl_Callback*)cb_wToolkitStop);
        wToolkitStop->align(Fl_Align(512|FL_ALIGN_INSIDE));
        o->box(FL_FREE_BOXTYPE);
        o->down_box(FL_FREE_BOXTYPE);
        o->clear_visible_focus();
      } // Fl_Button* wToolkitStop
      { Fl_Box* o = new Fl_Box(92, 33, 608, 28);
        o->hide();
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      o->box(FL_FREE_BOXTYPE);
      wToolkitToolbar->end();
    } // Fl_Group* wToolkitToolbar
    { wTile = new TFLTile(0, 78, 720, 522);
      wTile->box(FL_NO_BOX);
      wTile->color(FL_BACKGROUND_COLOR);
      wTile->selection_color(FL_BACKGROUND_COLOR);
      wTile->labeltype(FL_NORMAL_LABEL);
      wTile->labelfont(0);
      wTile->labelsize(14);
      wTile->labelcolor(FL_FOREGROUND_COLOR);
      wTile->align(Fl_Align(FL_ALIGN_TOP));
      wTile->when(FL_WHEN_RELEASE);
      { Fl_Box* o = new Fl_Box(50, 128, 620, 422);
        o->hide();
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      { wScriptPanel = new TFLScriptPanel(0, 78, 720, 422);
        wScriptPanel->box(FL_NO_BOX);
        wScriptPanel->color(FL_BACKGROUND_COLOR);
        wScriptPanel->selection_color(FL_BACKGROUND_COLOR);
        wScriptPanel->labeltype(FL_NORMAL_LABEL);
        wScriptPanel->labelfont(0);
        wScriptPanel->labelsize(14);
        wScriptPanel->labelcolor(FL_FOREGROUND_COLOR);
        wScriptPanel->align(Fl_Align(FL_ALIGN_TOP));
        wScriptPanel->when(FL_WHEN_RELEASE);
        wScriptPanel->end();
      } // TFLScriptPanel* wScriptPanel
      { wToolkitTerminal = new TFLTerminalEditor(0, 500, 720, 100);
        wToolkitTerminal->box(FL_THIN_DOWN_FRAME);
        wToolkitTerminal->color(FL_BACKGROUND2_COLOR);
        wToolkitTerminal->selection_color((Fl_Color)246);
        wToolkitTerminal->labeltype(FL_NORMAL_LABEL);
        wToolkitTerminal->labelfont(0);
        wToolkitTerminal->labelsize(14);
        wToolkitTerminal->labelcolor(FL_FOREGROUND_COLOR);
        wToolkitTerminal->textfont(4);
        wToolkitTerminal->align(Fl_Align(FL_ALIGN_TOP));
        wToolkitTerminal->when(FL_WHEN_RELEASE);
      } // TFLTerminalEditor* wToolkitTerminal
      wTile->end();
      Fl_Group::current()->resizable(wTile);
    } // TFLTile* wTile
    wToolkitWindow->position(x, y);
    wToolkitWindow->end();
  } // Fl_Double_Window* wToolkitWindow
  return wToolkitWindow;
}
