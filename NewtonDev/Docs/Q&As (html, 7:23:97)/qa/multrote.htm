<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Routing Multiple Items</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Routing Multiple Items</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Routing Multiple Items  (5/15/96)</H3><DL><DD>Q:    How can my application route multiple items at one time?<BR><BR>A:    The target must be a "multiple item target" created with the <CODE>CreateTargetCursor </CODE>function.<BR>    For instance, your application could use a <CODE>GetTargetInfo </CODE>method like:<BR>        <BR>        <CODE><PRE>        func(reason)    begin        local t := CreateTargetCursor(kDataClassSymbol, myItemArray);        local tv := base; // the targetView            return {target: t, targetView: tv};    end;</PRE><BR></CODE><BR>    The first argument to <CODE>CreateTargetCursor</CODE> is used as the class of the target, which is used to determine what formats and transports are available. You must register formats on that data class symbol in your part's <CODE>InstallScript </CODE>function. <BR><BR>    The item array passed to <CODE>CreateTargetCursor</CODE> can contain any items, including soup entries or soup entry aliases. If you include soup entry aliases, they will automatically be resolved when accessing items using the <CODE>GetTargetCursor </CODE>function.<BR><BR>    Print formats that have their <CODE>usesCursors </CODE>slot set to <CODE>nil </CODE>will automatically print items on separate pages -- print formats must use the target variable to image the current item. To print multiple items, set the format <CODE>usesCursors </CODE>slot to <CODE>true </CODE>and use <CODE>GetTargetCursor(target, nil)</CODE> to navigate through the items. <BR><BR>    If either the format (the <CODE>usesCursors </CODE>slot) or the transport (the <CODE>allowsBodyCursors </CODE>slot) does not support cursors, the system will automatically split the items into separate Out Box items.</DL>