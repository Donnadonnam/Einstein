<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Maximum Speeds with the Serial Port</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Maximum Speeds with the Serial Port</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Maximum Speeds with the Serial Port  (9/19/96)</H3><DL><DD>    Here are some rough estimates of the speeds attainable with the Newton serial port in combination with various kinds of flow control. These numbers are rough estimates, and depending on the protocol and amount of data (burst mode or not) you might get higher or lower transmission speeds. Experiment until you have found the optimal transmission speed.<BR><BR>    &#149;    0 to 38.4 Kbps<BR>    No handshaking necessary for short bursts, but long transmissions require flow control (either hardware or XON/XOFF).<BR><BR>    &#149;    38.4 Kbps to 115 Kbps<BR>    Require flow control, preferably hardware, but XON/XOFF should also work reasonably reliably.<BR><BR>    &#149;    115 Kbps +<BR>    You will encounter problems with latency and buffer sizes.  Speeds in this range require an error correcting protocol.<BR><BR>    Both hardware and <CODE>XON/XOFF</CODE> flow control can be set with the <CODE>kCMOInputFlowControlParms </CODE>and <CODE>kCMOOutputFlowControlParms </CODE>options.  In the case of hardware handshaking <CODE>(RTS/CTS)</CODE> you should use the following options:<BR><BR><CODE><PRE>{    label:    kCMOInputFlowControlParms,    type:        'option,    opCode:    opSetRequired,    data:        {    arglist: [                        kDefaultXonChar,                        kDefaultXoffChar,                        NIL,                        TRUE,                        0,                        0,    ],                    typelist: ['struct,                        'byte,                        'byte,                        'boolean,                        'boolean,                        'boolean,                        'boolean,    ],                },},{    label:    kCMOOutputFlowControlParms,    type:        'option,    opCode:    opSetRequired,    data:        {    arglist: [                        kDefaultXonChar,                        kDefaultXoffChar,                        NIL,                        TRUE,                        0,                        0,    ],                    typelist: ['struct,                        'byte,                        'byte,                        'boolean,                        'boolean,                        'boolean,                        'boolean,    ],                },}</CODE></PRE></DL>