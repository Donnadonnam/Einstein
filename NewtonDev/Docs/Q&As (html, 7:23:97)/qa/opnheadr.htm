<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: How to Programmatically Open the Header Slip</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>How to Programmatically Open the Header Slip</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>How to Programmatically Open the Header Slip  (1/3/97)</H3><DL><DD>Q:    I like the way the Newton Works application (for Newton 2.1 OS) automatically opens the header slip each time a new entry is created.  Can I make my newtApp-based application do this?<BR><BR>A:    Yes!  The <CODE>newtEntry(Roll/Page)Header</CODE> proto has a <CODE>PopIt</CODE> method which opens the header.  You will need to override the <CODE>StatScript</CODE> of your <CODE>newtNewStationeryButton</CODE> and send the header a <CODE>PopIt</CODE> message.  Because <CODE>PopIt</CODE> is not defined prior to Newton 2.1 OS, you will need to check for its existence before calling it.  Here is a code example:<BR><BR>    <CODE><PRE>    newtNewStationeryButton.    StatScript: func( theStat )        begin            // Keep a copy of the inherited return value for use below            local result := inherited:?StatScript( theStat );            // Pass self as a parameter for the closure.  This gives us a reference            // to the application so we can get the entry view.            AddDeferredCall( func( context )                                 begin                                    local entryView := context:GetTargetView();                                    // This code assumes that your header is declared to the entry                                    // view with the name theHeaderView                                    if entryView.theHeaderView.popIt then                                        entryView.theHeaderView:Popit( true );                                end,                             [self] );            result;        end;</CODE></PRE></DL>