Welcome to the NewtonDev developer tool distribution, version 1.1.NewtonDev can be downloaded fromhttp://www.unna.org/unna/development/NewtonDev/ and mirrors.If you are running MacOS 9 or less, you can put this distributionanywhere, so long as you drop the right things in the system folder (seebelow).  If you are running MacOS X, we recommend you put this folderinside your /Developer directory. If you have not installed the NeXTSTEP,er, Apple Development CD, then you should put it somewhere else, but doNOT put it in the "Applications (Mac OS 9)" directory, because NCT scriptsdon't like parentheses (this is true for MacOS 9 as well). Most tools in this distribution require that you install certain extensioninto your System Folder. This stuff is located in the "¥ Drop on SystemFolder ¥". That goes for OS X people as well.  Also, if you're going touse Newton Press (doesn't work under Classic in MacOS X) you need to dropthe stuff located in the "¥ Put in Preferences Folder ¥" in, guess where,yep, the Preferences folder in your System Folder. Stuff in this distribution:Apple DocViewer 1.1.1	The application to view docs which are only available in this format.	(e.g. NTK documentation, DDK Introduction, etc.)Book Tools	Newton Book Maker and Newton Press.  Note that Newton Press	does NOT work under Classic on MacOS X.	C++	The Newton C++ tools, a set of tools for MPW.  You need MPW to use	them. See the README_FIRST file in the C++ directory for	instructions on how to download MPW and set everything up.		The C++ directory also contains Hammer and Newtsbug, two low level	debuggers for the Newton. Newtsbug requires the ROM Image for your	Newton. The ROM Image is in fact the AIF (ARM Image Format) file	made out of the ROM Source with more or less symbols for functions	in the Newton. Hammer requires the ROM Image and the High Image	which looks like the first ROM Extension. Hammer works properly if	you provide the ROM Extension of your Newton in the case that the	high ROM image isn't available. Hammer is more advanced than	NewtsBug but it has the high ROM Image drawback. Please refer to	their documentation from the Docs folder.	DILs 2.0	This is the Desktop Integration Libraries for Macintosh. They are	in CodeWarrior binary format, so you'll need CodeWarrior to use	them. Besides, they are not Carbonizable because Apple thought it	would be better to kill the Communication Toolbox. (They also	thought it was better to kill the Newton).	The DILs is the technology at the heart of NCU and NTK (and NPI,	NewtonPress, etc.). So with the MacOS emulator for OpenSTEP, all	you have is TCP/IP and AppleTalk over Ethernet. For TCP/IP Dock	communications, you'll need Thomas Tempelmann's TCP/IP Dock	extension.Docs	A fairly complete collection of the Newton development documentation,	mostly in PDF format, including the NTK User's Guide.Font Tools	Enough of Apple's Font Tools to generate fonts.  The Newton Font	Tool is also provided, which is a much easier mechanism.  See the	FAQ for Newton Community for information on where to get Font-making	example code. http://www.cs.umd.edu/users/seanl/newton/ is a good	start.Newton Connection Utilities	The beloved download program, which Sean finds useful for 	developing Waba apps. Comes with a patch to hack it to use the serial	port at 57600 bps instead of 38400 and the package to use on the	Newton for this serial speed.	NTK 1.6.4	Newton Toolkit 1.6.4.  Need we say more?  If you're a beginning	Newton developer, then this (and the Docs folder below) is all you	need.OS X Icons	A collection of gorgeous OS X Newton-themed Icons by John SchillingPackType			Drop a .pkg file on PackType, by Steve Weyer, and it will	change its TYPE and CREATOR codes.  After that, you'll be	able to successfully drop the file onto NCU to download.Sample Code	The NTK Sample Code for Macintosh. This folder includes the latest	sample codes which were written by Apple.