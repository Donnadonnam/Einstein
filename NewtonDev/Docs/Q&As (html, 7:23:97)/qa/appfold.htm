<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: How to Create Application-specific Folders</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>How to Create Application-specific Folders</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>How to Create Application-specific Folders  (5/14/96)</H3><DL><DD>Q:    I would like to programmatically create folders so that they are available as soon as the application is open. What is the best approach to add application-specific folders?<BR><BR>A:    You can use the global functions <CODE>AddFolder</CODE> and <CODE>RemoveFolder</CODE> to modify the folder set for a given application.<BR><BR><CODE><PRE>AddFolder(newFolderStr, appSymbol)</PRE><BR>    newFolderStr </CODE>- string, the name of the new folder<BR><CODE>    appSymbol </CODE>- symbol, application for local folder<BR><CODE>    result </CODE>- symbol, the folder symbol of the newly added folder.<BR><BR><CODE>    AddFolder</CODE> takes a folder name and creates a new folder for the application.<BR><BR><CODE>    AddFolder</CODE> returns the symbol representing the tag value for the new folder.  Please note that the symbol may be different from the value returned by using <CODE>Intern()</CODE> on the string.  In particular, folder names with non-ASCII folders are supported.  If a folder with the name already exists, the symbol for the pre-existing folder is returned and a new folder is not created.<BR><BR>    There is a limit on the number of unique folders an application can support.  If the limit is exceeded, <CODE>AddFolder</CODE> returns <CODE>NIL</CODE> and a new folder is not added.  With the Newton 2.0 OS, the current limit is twelve global folders and twelve local folders.<BR><BR><CODE><PRE>RemoveFolder(folderSym, appSymbol)</PRE><BR>    folderSym </CODE>- symbol, the folder symbol of the folder to remove<BR>    <CODE>appSymbol </CODE>- symbol, the application for which to remove the folder<BR><CODE>    result </CODE>- undefined; do not rely on the return value of this function.<BR><BR><CODE>    RemoveFolder</CODE> can be used to remove a folder from the available list for an application. If items exist in a folder that is removed, the only way users can see the items is by selecting "All Items" from the folder list.<BR></DL>