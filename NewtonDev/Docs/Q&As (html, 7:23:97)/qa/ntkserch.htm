<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: NTK Search and Memory Hoarding</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>NTK Search and Memory Hoarding</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>NTK Search and Memory Hoarding  (11/24/95)</H3><DL><DD>Q:    I sometimes run out space after working with a project for a while.  How can I avoid this?<BR><BR>A:    NTK 1.6 is built with the MacApp application framework, which brings with it certain memory requirements.  Understanding the way NTK uses memory can help avoid running out of memory.<BR><B><BR></B>    Most of user interface elements you see when using NTK are pointer-based MacApp objects. Allocating a large number of pointers in the application heap causes fragmentation. To prevent that, MacApp has its own private heap where it manages all these pointers. <BR><BR>    This heap expands when necessary, but in the current implementation it never shrinks. This memory is not lost, but it may be wasted, effectively reducing free memory in the application partition. <BR><BR>    During a single NTK session, build requirements are relatively constant. Partition size requirements will thus be mostly affected by the maximum number of NTK windows open at the same time. If you keep this number reasonable, relative to the partition size you can afford, there should be no problem.<BR><BR>    The fact that MacApp's objects heap never shrinks can, however, become an issue when performing searches. The problem is not the search itself, but the number of matches. Each line you see in the Search Results window is a MacApp object occupying 500 to  800 bytes. If your search results in a large number of matches, you may run out of memory.<BR><BR>    To reduce such occurrences:<BR>    1)    Perform more focused searches to keep the number of matches per search reasonable.<BR>    2)    Close the Search Results window as soon as you are done with it, preferably before doing another search.<BR></DL>