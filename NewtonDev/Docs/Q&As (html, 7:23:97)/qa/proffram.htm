<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Profiler and Frames of Functions</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Profiler and Frames of Functions</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Profiler and Frames of Functions  (7/10/95)</H3><DL><DD>Q:    Using the profiler with a large frame of functions gives confusing results.  The profiler labels each function by the name of the frame and a number, but the numbers don't seem to correspond to the order in which I defined the functions.  Moving the functions around doesn't change the profiler labels.  How can I figure out which function is which?<BR><BR>A:    If frames have less than than a certain number of slots (20 in the current release), the slots are kept in the order they were defined or added.  If there are more than 20 slots in the frame, the slots are reordered.  (This improves slot lookup operations.)  The profiler in NTK 1.5 and NTK 1.6labels the functions by their position in the final, possibly reordered, frame.<BR><BR>    To determine which function is in which position, you need to look at the frame after the reordering has occurred.  You can do this by printing the frame after it's been defined.  At compile time you can use a print statement in the slot editor or afterScript.  After the package has been downloaded you can use the inspector.  Then count (starting from one) through the slots to find your function.<BR><BR>    Here's a little inspector snippet that will print the slots in a frame in order with their numbers:<BR><CODE><PRE>    call func(theFrame) begin        local i := 0;        foreach slot, value in theFrame do begin            print(i && ': && slot);            i := i + 1;        end    end with (&lt;the reordered frame&gt;)</PRE><BR></CODE><BR></DL>