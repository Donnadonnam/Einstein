<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Symbols vs Path Expressions and Equality</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Symbols vs Path Expressions and Equality</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Symbols vs Path Expressions and Equality  (7/11/94)</H3><DL><DD>Q:    While trying to write code that tests for the existance of an index, I tried the following, which did not work.  How can I compare path expressions?<BR><CODE><PRE>if value.path = '|name.first| then ...    // WRONG</PRE><BR></CODE>A:    There are several concerns.  <CODE>'|name.first|</CODE> is not a path expression, it is a symbol with an escaped period.  A proper path expression is either <CODE>'name.first</CODE> or <CODE>[pathExpr: 'name, 'first]</CODE>.  The vertical bars escape everything between them to be a single NewtonScript symbol.<BR><BR>    The test <CODE>value.path = 'name.first</CODE> will always fail, because path expressions are deep objects (essentially arrays) the equal comparison will compare references rather than contents.  You will have to write your own code to deeply compare path expressions.<BR><BR>    This code is further complicated by the fact that symbols are allowed in place of path expressions that contain only one element, but the two syntaxes produce different NewtonScript objects with different meanings.  That is, <CODE>'name = [pathExpr: 'name]</CODE> will always fail, as the objects are different.<BR><BR>    A general test is probably unnecessary in most circumstances, since you will be able to make assumptions about what you are looking for.  For example, here is some code that will check if a given path value from a soup index is equivalent to <CODE>'name.first</CODE>:<BR><BR><CODE><PRE>if ClassOf(value.path) = 'pathExpr and Length(value.path) = 2      and value.path[0] = 'name and value.path[1] = 'first then ...</CODE></PRE></DL>