<HTML><HEAD><TITLE>Newton 2.x Q&amp;A: Time Zones, GMT, Daylight Savings, and Newton Time</TITLE></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><H2>Time Zones, GMT, Daylight Savings, and Newton Time</H2><H4> One of the Newton 2.x OS Q&amp;As<BR>Copyright © 1997 Newton, Inc.  All Rights Reserved. Newton, Newton Technology, Newton Works, the Newton, Inc. logo, the Newton Technology logo, the Light Bulb logo and MessagePad are trademarks of Newton, Inc. and may be registered in the U.S.A. and other countries. Windows is a registered trademark of Microsoft Corp. All other trademarks and company names are the intellectual property of their respective owners.</H4><BR>For the most recent version of the Q&amp;As on the World Wide Web, check the URL: <CODE><A HREF="http://www.newton-inc.com/dev/techinfo/qa/qa.htm">http://www.newton-inc.com/dev/techinfo/qa/qa.htm</A></CODE><BR>If you've copied this file locally,<A HREF="qa.htm">click here to go to the main Newton Q&amp;A page.</A><BR>This document was exported on 7/23/97.</CENTER><H3><HR><B> </B>Time Zones, GMT, Daylight Savings, and Newton Time  (3/4/97)</H3><DL><DD>Q:    There don't seem to be any functions in the Newton OS for converting between standard time values, such as finding the time in a different time zone, or GMT time.  I know it's possible because the built in Time Zones application does it.  How can I do this in my own application?<BR><BR>A:    The Newton OS doesn't actually have the concept of time zones.  Instead, for each city if keeps track of the offset (in seconds) from GMT for that city.  You can find this in the <CODE>'gmt</CODE> slot of a city entry, which can be gotten with the <CODE>GetCityEntry</CODE> global function. See the "Built In Apps and System Data" chapter of the Newton Programmers Guide for details.  Note that the docs incorrectly say the <CODE>gmt</CODE> slot contains the offset in minutes, when it is actually specified in seconds.  The current location is available in the <CODE>'location</CODE> slot of the user configuration frame.  Use <CODE>GetUserConfig('location)</CODE> to access it.  The global function <CODE>LocalTime</CODE> can be used to convert a time to the local time in a distant city.<BR><BR>    A simple way to get the local time from a GMT time would be to create a city entry representing GMT (gmt offset 0, no daylight savings) and then use <CODE>LocalTime</CODE> to compute the delta between the current city and the GMT city, then add the delta to the given GMT time.  <CODE>LocalTime</CODE> can be used directly to go the other way--getting the GMT time from the local time.<BR><BR>    <CODE>LocalTime</CODE>(<I><CODE>time</I></CODE>, <I><CODE>where</I></CODE>)<BR>    <I><CODE>time</I></CODE> - a time in minutes in the local (Newton device) zone, for example as returned from the <CODE>Time</CODE> function<BR>    <I><CODE>where</I></CODE> - a city entry, as returned from <CODE>GetCityEntry</CODE><BR>    <I><CODE>result</I></CODE> - a time in minutes in the <I>where</I> city, adjusted as necessary for time zone and daylight savings.<BR><BR>    <CODE>LocalTime</CODE> tells you the local time for the distant city, given a time in the current city.  For example, to find out the time in Tokyo:<BR><BR><CODE><PRE>    Date(LocalTime(time(), GetCityEntry("Tokyo")[0]))    #C427171  {year: 1997, month: 2, Date: 22, dayOfWeek: 6,           hour: 8, minute: 1, second: 0, daysInMonth: 28}</PRE><BR></CODE><BR><BR>    Because the Newton OS doesn't have time zones, it can't keep track of daylight savings time by changing zones (for example, from Pacific Standard Time to Pacific Daylight Time).  Instead, it uses a bunch of rules that tell it when to set the time ahead or back, and by how much.  The global function <CODE>DSTOffset</CODE> can be used to find out how much these daylight savings time rules have adjusted a given time for a given city.<BR><BR><CODE>    DSTOffset(<I>time</I>, <I>where</I>)</CODE><BR><I><CODE>    time</I></CODE> - a time in minutes in the where city<BR><I><CODE>    where</I></CODE> - a city entry, as returned from <CODE>GetCityEntry</CODE><BR><I><CODE>    result</I></CODE> - an integer, number of minutes that daylight savings adjusted that time in that city.<BR><BR>    <CODE>DSTOffset</CODE> tells you what the daylight savings component is of a given time in a given location.  This component would need to be subtracted from the result of the global function <CODE>Time</CODE> to get a non-daylight-adjusted time for the current location.<BR><CODE><PRE>    // it's currently 2:52 PM on 3/4/97, no DST adjustment    DSTOffset(Time(), GetCityEntry("Cupertino")[0]);    #0        0    // but during the summer, DST causes the clocks to "spring forward" an hour.    DSTOffset(StringToDate("6/6/97 12:34"), GetCityEntry("Cupertino")[0]);    #F0       60</CODE></PRE></DL>